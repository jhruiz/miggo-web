--   -------------------------------------------------- 
--   Generated by Enterprise Architect Version 11.1.1112
--   Created On : jueves, 26 marzo, 2015 
--   DBMS       : PostgreSQL 
--   -------------------------------------------------- 





--  Create Tables 
CREATE SEQUENCE auditorias_id_seq INCREMENT 1 START 1
;

CREATE TABLE auditorias ( 
	id integer DEFAULT nextval(('auditorias_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	usuario_id integer NOT NULL,    --  Llave foranea a la tabla usuarios 
	descripcion text NOT NULL,    --  Descripcion de la actividad realizada ante el sistema.  
	accion varchar(50) NOT NULL,    --  Accion realizada ante el sistema 
	created timestamp without time zone    --  fecha de creacion del registro 
)
;
COMMENT ON COLUMN auditorias.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN auditorias.usuario_id
    IS 'Llave foranea a la tabla usuarios'
;
COMMENT ON COLUMN auditorias.descripcion
    IS 'Descripcion de la actividad realizada ante el sistema. '
;
COMMENT ON COLUMN auditorias.accion
    IS 'Accion realizada ante el sistema'
;
COMMENT ON COLUMN auditorias.created
    IS 'fecha de creacion del registro'
;

CREATE SEQUENCE bancos_id_seq INCREMENT 1 START 1
;

CREATE TABLE bancos ( 
	id integer DEFAULT nextval(('bancos_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	nombre varchar(100) NOT NULL    --  Nombre del banco 
)
;
COMMENT ON COLUMN bancos.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN bancos.nombre
    IS 'Nombre del banco'
;

CREATE SEQUENCE bandejacampos_id_seq INCREMENT 1 START 1
;

CREATE TABLE bandejacampos ( 
	id integer DEFAULT nextval(('bandejacampos_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental. 
	bandeja_id integer NOT NULL,    --  Llave foranea a la tabla bandejas 
	campo_id integer NOT NULL,    --  Llave foranea a la tabla campos 
	campo_requerido boolean,    --  determina si el campo es requerido o no en la bandeja. 
	created timestamp without time zone    --  fecha creacion del registro. 
)
;
COMMENT ON COLUMN bandejacampos.id
    IS 'Llave primaria de la tabla, autoincremental.'
;
COMMENT ON COLUMN bandejacampos.bandeja_id
    IS 'Llave foranea a la tabla bandejas'
;
COMMENT ON COLUMN bandejacampos.campo_id
    IS 'Llave foranea a la tabla campos'
;
COMMENT ON COLUMN bandejacampos.campo_requerido
    IS 'determina si el campo es requerido o no en la bandeja.'
;
COMMENT ON COLUMN bandejacampos.created
    IS 'fecha creacion del registro.'
;

CREATE SEQUENCE bandejacampovalores_id_seq INCREMENT 1 START 1
;

CREATE TABLE bandejacampovalores ( 
	id integer DEFAULT nextval(('bandejacampovalores_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental. 
	valor varchar(50),    --  Valor que toma el campo en la bandeja. 
	bandejacampo_id integer NOT NULL,    --  Llave foranea a la tabla bandejacampos 
	paquete_id integer NOT NULL    --  Llave foranea a la tabla paquetes 
)
;
COMMENT ON COLUMN bandejacampovalores.id
    IS 'Llave primaria de la tabla, autoincremental.'
;
COMMENT ON COLUMN bandejacampovalores.valor
    IS 'Valor que toma el campo en la bandeja.'
;
COMMENT ON COLUMN bandejacampovalores.bandejacampo_id
    IS 'Llave foranea a la tabla bandejacampos'
;
COMMENT ON COLUMN bandejacampovalores.paquete_id
    IS 'Llave foranea a la tabla paquetes'
;

CREATE SEQUENCE bandejas_id_seq INCREMENT 1 START 1
;

CREATE TABLE bandejas ( 
	id integer DEFAULT nextval(('bandejas_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental. 
	nombre varchar(50) NOT NULL,    --  Nombre de la bandeja  
	nombre_menu varchar(50) NOT NULL    --  Nombre que se va a mostrar en el menu para referirse a la bandeja. 
)
;
COMMENT ON COLUMN bandejas.id
    IS 'Llave primaria de la tabla, autoincremental.'
;
COMMENT ON COLUMN bandejas.nombre
    IS 'Nombre de la bandeja '
;
COMMENT ON COLUMN bandejas.nombre_menu
    IS 'Nombre que se va a mostrar en el menu para referirse a la bandeja.'
;

CREATE SEQUENCE bandejasflujos_id_seq INCREMENT 1 START 1
;

CREATE TABLE bandejasflujos ( 
	id integer DEFAULT nextval(('bandejasflujos_id_seq'::text)::regclass) NOT NULL,    --  Llave foranea a la tabla, autoincremental 
	flujo_id integer NOT NULL,    --  Llave foranea a la tabla flujos, representa el flujo al cual se le va a configurar la bandeja 
	bandeja_id integer NOT NULL,    --  Llave foranea a la tabla bandejas, representa la bandeja que se va a configurar para el flujo 
	estado_inicial boolean NOT NULL,    --  Indica si la bandeja es el estado inicial para el flujo 
	estado_final boolean NOT NULL,    --  Indica si la bandeja para el flujo es el estado final 
	asigna_usuario_manual boolean NOT NULL,    --  Indica si el usuario que va  a gestionar el paquete en la bandeja, se debe asignar manual(0) como una olla(1) o por balanceo de cargas(2) 
	estado_anulado boolean,    --  Indica si la bandeja en este flujo contendra los paquetes anulados 
	gestion_indexacion boolean    --  Indica si la bandeja flujo se debe gestionar manualmente, o se gestiona de manera automatica.  
--  true: Gestion por indexacion automatica false: Gestion manualmente 
)
;
COMMENT ON COLUMN bandejasflujos.id
    IS 'Llave foranea a la tabla, autoincremental'
;
COMMENT ON COLUMN bandejasflujos.flujo_id
    IS 'Llave foranea a la tabla flujos, representa el flujo al cual se le va a configurar la bandeja'
;
COMMENT ON COLUMN bandejasflujos.bandeja_id
    IS 'Llave foranea a la tabla bandejas, representa la bandeja que se va a configurar para el flujo'
;
COMMENT ON COLUMN bandejasflujos.estado_inicial
    IS 'Indica si la bandeja es el estado inicial para el flujo'
;
COMMENT ON COLUMN bandejasflujos.estado_final
    IS 'Indica si la bandeja para el flujo es el estado final'
;
COMMENT ON COLUMN bandejasflujos.asigna_usuario_manual
    IS 'Indica si el usuario que va  a gestionar el paquete en la bandeja, se debe asignar manual(0) como una olla(1) o por balanceo de cargas(2)'
;
COMMENT ON COLUMN bandejasflujos.estado_anulado
    IS 'Indica si la bandeja en este flujo contendra los paquetes anulados'
;
COMMENT ON COLUMN bandejasflujos.gestion_indexacion
    IS 'Indica si la bandeja flujo se debe gestionar manualmente, o se gestiona de manera automatica.  
--  true: Gestion por indexacion automatica false: Gestion manualmente'
;

CREATE SEQUENCE cabecerapaquetes_id_seq INCREMENT 1 START 1
;

CREATE TABLE cabecerapaquetes ( 
	id integer DEFAULT nextval(('cabecerapaquetes_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria a la tabla, autoincremental 
	consecutivo_por_flujo varchar(250) NOT NULL,    --  Permite identificar un paquete cuyo identificador se maneja de forma autoincremental por cada flujo. 
	centroscosto_id integer,    --  Llave foranea a la tabla centroscostos, Indica el centro de costo relacionado a la solicitud de orden de compra 
	flujo_id integer NOT NULL,    --  Llave foranea a la tabla flujos, representa el flujo al cual pertenece la cabecera de paquetes 
	entidade_id integer NOT NULL,    --  Llave foranea a la tabla entidades, referencia la entidad a la cual pertenece los paquetes que agrupa la cabecera. 
	created timestamp without time zone    --  Fecha de creacion de la cabecera 
)
;
COMMENT ON TABLE cabecerapaquetes
    IS 'Contiene la informacion de la cabecera para un conjunto de paquetes'
;
COMMENT ON COLUMN cabecerapaquetes.id
    IS 'Llave primaria a la tabla, autoincremental'
;
COMMENT ON COLUMN cabecerapaquetes.consecutivo_por_flujo
    IS 'Permite identificar un paquete cuyo identificador se maneja de forma autoincremental por cada flujo.'
;
COMMENT ON COLUMN cabecerapaquetes.centroscosto_id
    IS 'Llave foranea a la tabla centroscostos, Indica el centro de costo relacionado a la solicitud de orden de compra'
;
COMMENT ON COLUMN cabecerapaquetes.flujo_id
    IS 'Llave foranea a la tabla flujos, representa el flujo al cual pertenece la cabecera de paquetes'
;
COMMENT ON COLUMN cabecerapaquetes.entidade_id
    IS 'Llave foranea a la tabla entidades, referencia la entidad a la cual pertenece los paquetes que agrupa la cabecera.'
;
COMMENT ON COLUMN cabecerapaquetes.created
    IS 'Fecha de creacion de la cabecera'
;

CREATE SEQUENCE cambiobandejamensajes_id_seq INCREMENT 1 START 1
;

CREATE TABLE cambiobandejamensajes ( 
	id integer DEFAULT nextval(('cambiobandejamensajes_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	mensaje varchar(100) NOT NULL    --  Mensaje a mostrar 
)
;
COMMENT ON TABLE cambiobandejamensajes
    IS 'Contiene el mensaje que le aparece al usuario para cambiar el paquete a una bandeja en el flujo'
;
COMMENT ON COLUMN cambiobandejamensajes.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN cambiobandejamensajes.mensaje
    IS 'Mensaje a mostrar'
;

CREATE SEQUENCE campos_id_seq INCREMENT 1 START 1
;

CREATE TABLE campos ( 
	id integer DEFAULT nextval(('campos_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental. 
	nombre varchar(50) NOT NULL,    --  Nombre del campo 
	tipocampo_id integer NOT NULL,    --  Llave foranea a la tabla tipocampos, representa el tipo del campo. 
	tipodato_id integer NOT NULL,    --  Llave foranea a la tabla tipodatos, representa el tipo de dato que manejara el campo. 
	obligatorio boolean    --  Determina si el campo es obligatorio. 
)
;
COMMENT ON COLUMN campos.id
    IS 'Llave primaria de la tabla, autoincremental.'
;
COMMENT ON COLUMN campos.nombre
    IS 'Nombre del campo'
;
COMMENT ON COLUMN campos.tipocampo_id
    IS 'Llave foranea a la tabla tipocampos, representa el tipo del campo.'
;
COMMENT ON COLUMN campos.tipodato_id
    IS 'Llave foranea a la tabla tipodatos, representa el tipo de dato que manejara el campo.'
;
COMMENT ON COLUMN campos.obligatorio
    IS 'Determina si el campo es obligatorio.'
;

CREATE SEQUENCE cargos_id_seq INCREMENT 1 START 1
;

CREATE TABLE cargos ( 
	id integer DEFAULT nextval(('cargos_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental. 
	nombre varchar(50) NOT NULL    --  Nombre del cargo. 
)
;
COMMENT ON COLUMN cargos.id
    IS 'Llave primaria de la tabla, autoincremental.'
;
COMMENT ON COLUMN cargos.nombre
    IS 'Nombre del cargo.'
;

CREATE SEQUENCE centroscostos_id_seq INCREMENT 1 START 1
;

CREATE TABLE centroscostos ( 
	id integer DEFAULT nextval(('centroscostos_id_seq'::text)::regclass) NOT NULL,    --  Llave foranea a la tabla, autoincremental 
	nombre varchar(50) NOT NULL,    --  Nombre del centro de costo 
	codigo varchar(50)    --  Codigo del centro de costo 
)
;
COMMENT ON COLUMN centroscostos.id
    IS 'Llave foranea a la tabla, autoincremental'
;
COMMENT ON COLUMN centroscostos.nombre
    IS 'Nombre del centro de costo'
;
COMMENT ON COLUMN centroscostos.codigo
    IS 'Codigo del centro de costo'
;

CREATE SEQUENCE ciudades_id_seq INCREMENT 1 START 1
;

CREATE TABLE ciudades ( 
	id integer DEFAULT nextval(('ciudades_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental. 
	nombre varchar(50) NOT NULL,    --  Nombre de la ciudad. 
	regionale_id integer NOT NULL,    --  Llave foranea a la tabla regionales, contiene la regional a la cual pertenece la ciudad. 
	estadoregistro_id integer NOT NULL,    --  Llave foranea a la tabla estadoregistros, que indica el estado de la ciudad(Activa, inactiva) 
	descripcion varchar(50),    --  Descripcion de la ciudad 
	codigo varchar(50)    --  Codigo de la ciudad. 
)
;
COMMENT ON COLUMN ciudades.id
    IS 'Llave primaria de la tabla, autoincremental.'
;
COMMENT ON COLUMN ciudades.nombre
    IS 'Nombre de la ciudad.'
;
COMMENT ON COLUMN ciudades.regionale_id
    IS 'Llave foranea a la tabla regionales, contiene la regional a la cual pertenece la ciudad.'
;
COMMENT ON COLUMN ciudades.estadoregistro_id
    IS 'Llave foranea a la tabla estadoregistros, que indica el estado de la ciudad(Activa, inactiva)'
;
COMMENT ON COLUMN ciudades.descripcion
    IS 'Descripcion de la ciudad'
;
COMMENT ON COLUMN ciudades.codigo
    IS 'Codigo de la ciudad.'
;

CREATE SEQUENCE configuraciondatos_id_seq INCREMENT 1 START 1
;

CREATE TABLE configuraciondatos ( 
	id integer DEFAULT nextval(('configuraciondatos_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	nombre varchar(50) NOT NULL,    --  Nombre del dato 
	valor varchar(150) NOT NULL    --  Valor del dato 
)
;
COMMENT ON COLUMN configuraciondatos.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN configuraciondatos.nombre
    IS 'Nombre del dato'
;
COMMENT ON COLUMN configuraciondatos.valor
    IS 'Valor del dato'
;

CREATE SEQUENCE consecutivoflujos_id_seq INCREMENT 1 START 1
;

CREATE TABLE consecutivoflujos ( 
	id integer DEFAULT nextval(('consecutivoflujos_id_seq'::text)::regclass) NOT NULL,
	flujo_id integer NOT NULL,    --  Llave foranea  a la tabla flujos, indica el flujo al cual se le va a asignar el consecutivo. 
	consecutivo integer DEFAULT 0 NOT NULL    --  Consecutivo del flujo 
)
;
COMMENT ON COLUMN consecutivoflujos.flujo_id
    IS 'Llave foranea  a la tabla flujos, indica el flujo al cual se le va a asignar el consecutivo.'
;
COMMENT ON COLUMN consecutivoflujos.consecutivo
    IS 'Consecutivo del flujo'
;

CREATE SEQUENCE consecutivopaquetes_id_seq INCREMENT 1 START 1
;

CREATE TABLE consecutivopaquetes ( 
	id integer DEFAULT nextval(('consecutivopaquetes_id_seq'::text)::regclass) NOT NULL,    --  Id de la tabla, autoincremental 
	cabecerapaquete_id integer NOT NULL,    --  llave foranea al id de la tabla cabecerapaquetes 
	tipopaquete_id integer NOT NULL,    --  Llave foranea a la tabla tipopaquetes. 
	consecutivo integer DEFAULT 0    --  Consecutivo del paquete para la cabecera del tipo de paquete 
)
;
COMMENT ON COLUMN consecutivopaquetes.id
    IS 'Id de la tabla, autoincremental'
;
COMMENT ON COLUMN consecutivopaquetes.cabecerapaquete_id
    IS 'llave foranea al id de la tabla cabecerapaquetes'
;
COMMENT ON COLUMN consecutivopaquetes.tipopaquete_id
    IS 'Llave foranea a la tabla tipopaquetes.'
;
COMMENT ON COLUMN consecutivopaquetes.consecutivo
    IS 'Consecutivo del paquete para la cabecera del tipo de paquete'
;

CREATE SEQUENCE datoscabeceravalores_id_seq INCREMENT 1 START 1
;

CREATE TABLE datoscabeceravalores ( 
	id integer DEFAULT nextval(('datoscabeceravalores_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla,, autoincremental 
	indicedoc_id integer NOT NULL,    --  Llave foranea a la tabla indicedocs, referencia el indice al cual se le va a asignar el valor 
	cabecerapaquete_id integer NOT NULL,    --  Llave foranea a la tabla cabecerapaquetes, referencia la cabecera de paquetes a la cual corresponde el valor del indice 
	valor varchar(250),    --  Valor del indice para la cabecera de paquetes. 
	created timestamp without time zone    --  Fecha creacion de registro 
)
;
COMMENT ON COLUMN datoscabeceravalores.id
    IS 'Llave primaria de la tabla,, autoincremental'
;
COMMENT ON COLUMN datoscabeceravalores.indicedoc_id
    IS 'Llave foranea a la tabla indicedocs, referencia el indice al cual se le va a asignar el valor'
;
COMMENT ON COLUMN datoscabeceravalores.cabecerapaquete_id
    IS 'Llave foranea a la tabla cabecerapaquetes, referencia la cabecera de paquetes a la cual corresponde el valor del indice'
;
COMMENT ON COLUMN datoscabeceravalores.valor
    IS 'Valor del indice para la cabecera de paquetes.'
;
COMMENT ON COLUMN datoscabeceravalores.created
    IS 'Fecha creacion de registro'
;

CREATE SEQUENCE destinatarios_id_seq INCREMENT 1 START 1
;

CREATE TABLE destinatarios ( 
	id integer DEFAULT nextval(('destinatarios_id_seq'::text)::regclass) NOT NULL,    --  Id de la tabla  
	correo varchar(250) NOT NULL,    --  Destinatario al cual se le envia la notifiacion 
	notificacione_id integer NOT NULL,    --  Llave foranea a la tabla notificaciones 
	estado boolean,
	created timestamp without time zone
)
;
COMMENT ON COLUMN destinatarios.id
    IS 'Id de la tabla '
;
COMMENT ON COLUMN destinatarios.correo
    IS 'Destinatario al cual se le envia la notifiacion'
;
COMMENT ON COLUMN destinatarios.notificacione_id
    IS 'Llave foranea a la tabla notificaciones'
;

CREATE SEQUENCE distribucionmontos_id_seq INCREMENT 1 START 1
;

CREATE TABLE distribucionmontos ( 
	id integer DEFAULT nextval(('distribucionmontos_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria a la tabla, autoincremental 
	centroscosto_id integer NOT NULL,    --  Llave foranea a la tabla centroscostos, contiene el centro de costo de la distribucion del monto 
	paquete_id integer NOT NULL,    --  Llave foranea  a la tabla paquetes, referencia al paquete que contiene la factura a la cual se le va a aplicar la distribucion  
	num_factura varchar(50) NOT NULL,    --  Numero de la factura 
	monto decimal DEFAULT 0 NOT NULL,    --  Monto a distribuir 
	created timestamp without time zone    --  Fecha creacion del registro 
)
;
COMMENT ON COLUMN distribucionmontos.id
    IS 'Llave primaria a la tabla, autoincremental'
;
COMMENT ON COLUMN distribucionmontos.centroscosto_id
    IS 'Llave foranea a la tabla centroscostos, contiene el centro de costo de la distribucion del monto'
;
COMMENT ON COLUMN distribucionmontos.paquete_id
    IS 'Llave foranea  a la tabla paquetes, referencia al paquete que contiene la factura a la cual se le va a aplicar la distribucion '
;
COMMENT ON COLUMN distribucionmontos.num_factura
    IS 'Numero de la factura'
;
COMMENT ON COLUMN distribucionmontos.monto
    IS 'Monto a distribuir'
;
COMMENT ON COLUMN distribucionmontos.created
    IS 'Fecha creacion del registro'
;

CREATE SEQUENCE documentospaquetes_id_seq INCREMENT 1 START 1
;

CREATE TABLE documentospaquetes ( 
	id integer DEFAULT nextval(('documentospaquetes_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental. 
	nombre varchar(250) NOT NULL,    --  Contiene la url al documento del paquete. 
	paquete_id integer NOT NULL,    --  Llave foranea a la tabla paquete, representa el paquete al que pertenece el documento 
	glosado boolean,    --  Determina si el documento es glosado o no 
	revisado boolean,    --  Determina si un documento ya ha sido revisado 
	ubicacion_fisica varchar(300),    --  Texto que indica la ubicacion fisica del documento 
	tiposdocumentale_id integer NOT NULL,    --  Llave foranea a la tabla tiposdocumentales, indica el tipodocumental al cual pertenece el documento indexado 
	gestionado boolean,    --  Indica si el documento ya fue gestionado 
	created timestamp without time zone    --  Fecha de creacion del registro 
)
;
COMMENT ON COLUMN documentospaquetes.id
    IS 'Llave primaria de la tabla, autoincremental.'
;
COMMENT ON COLUMN documentospaquetes.nombre
    IS 'Contiene la url al documento del paquete.'
;
COMMENT ON COLUMN documentospaquetes.paquete_id
    IS 'Llave foranea a la tabla paquete, representa el paquete al que pertenece el documento'
;
COMMENT ON COLUMN documentospaquetes.glosado
    IS 'Determina si el documento es glosado o no'
;
COMMENT ON COLUMN documentospaquetes.revisado
    IS 'Determina si un documento ya ha sido revisado'
;
COMMENT ON COLUMN documentospaquetes.ubicacion_fisica
    IS 'Texto que indica la ubicacion fisica del documento'
;
COMMENT ON COLUMN documentospaquetes.tiposdocumentale_id
    IS 'Llave foranea a la tabla tiposdocumentales, indica el tipodocumental al cual pertenece el documento indexado'
;
COMMENT ON COLUMN documentospaquetes.gestionado
    IS 'Indica si el documento ya fue gestionado'
;
COMMENT ON COLUMN documentospaquetes.created
    IS 'Fecha de creacion del registro'
;

CREATE SEQUENCE entidades_id_seq INCREMENT 1 START 1
;

CREATE TABLE entidades ( 
	id integer DEFAULT nextval(('entidades_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tablaa 
	nombre varchar(100) NOT NULL    --  Nombre de la entidad 
)
;
COMMENT ON COLUMN entidades.id
    IS 'Llave primaria de la tablaa'
;
COMMENT ON COLUMN entidades.nombre
    IS 'Nombre de la entidad'
;

CREATE SEQUENCE entidadesusuarios_id_seq INCREMENT 1 START 1
;

CREATE TABLE entidadesusuarios ( 
	id integer DEFAULT nextval(('entidadesusuarios_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla 
	usuario_id integer NOT NULL,    --  Llave foranea a la tabla usuarios, referencia al usuario que se agregara a la entidad 
	entidade_id integer NOT NULL    --  Llave foranea a la tabla entidades, referencia a la entidad a la cual se va agregar al usuario 
)
;
COMMENT ON COLUMN entidadesusuarios.id
    IS 'Llave primaria de la tabla'
;
COMMENT ON COLUMN entidadesusuarios.usuario_id
    IS 'Llave foranea a la tabla usuarios, referencia al usuario que se agregara a la entidad'
;
COMMENT ON COLUMN entidadesusuarios.entidade_id
    IS 'Llave foranea a la tabla entidades, referencia a la entidad a la cual se va agregar al usuario'
;

CREATE SEQUENCE estadoregistros_id_seq INCREMENT 1 START 1
;

CREATE TABLE estadoregistros ( 
	id integer DEFAULT nextval(('estadoregistros_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental. 
	nombre varchar(50) NOT NULL    --  Nombre del estado de registro. 
)
;
COMMENT ON COLUMN estadoregistros.id
    IS 'Llave primaria de la tabla, autoincremental.'
;
COMMENT ON COLUMN estadoregistros.nombre
    IS 'Nombre del estado de registro.'
;

CREATE SEQUENCE flujos_id_seq INCREMENT 1 START 1
;

CREATE TABLE flujos ( 
	id integer DEFAULT nextval(('flujos_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	nombre varchar(50) NOT NULL,    --  Nombre del flujo 
	identificador_autoincremental boolean,    --  Indica si el identificador de la cabecera de la serie para un paquete, se manejara personalizado o  autoincremental  
	nombre_campo_identif varchar(250),    --  Nombre del campo identificador para el flujo 
	requiere_centrocosto boolean    --  Determina si para el flujo se va a manejar centros de costo 
)
;
COMMENT ON COLUMN flujos.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN flujos.nombre
    IS 'Nombre del flujo'
;
COMMENT ON COLUMN flujos.identificador_autoincremental
    IS 'Indica si el identificador de la cabecera de la serie para un paquete, se manejara personalizado o  autoincremental '
;
COMMENT ON COLUMN flujos.nombre_campo_identif
    IS 'Nombre del campo identificador para el flujo'
;
COMMENT ON COLUMN flujos.requiere_centrocosto
    IS 'Determina si para el flujo se va a manejar centros de costo'
;

CREATE SEQUENCE flujosdatoscabeceras_id_seq INCREMENT 1 START 1
;

CREATE TABLE flujosdatoscabeceras ( 
	id integer DEFAULT nextval(('flujosdatoscabeceras_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	flujo_id integer NOT NULL,    --  Llave foranea a la tabla flujos, referencia al flujo al cual se le va a configurar el campo para el identificador. 
	indicedoc_id integer NOT NULL,    --  Llave foranea a la tabla indicedocs, referencia el indice que se le va a asignar al flujo 
	obligatorio boolean,    --  Indica si el campo indices es obligatorio para el flujo 
	created timestamp without time zone    --  Fecha de creacion del registro 
)
;
COMMENT ON COLUMN flujosdatoscabeceras.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN flujosdatoscabeceras.flujo_id
    IS 'Llave foranea a la tabla flujos, referencia al flujo al cual se le va a configurar el campo para el identificador.'
;
COMMENT ON COLUMN flujosdatoscabeceras.indicedoc_id
    IS 'Llave foranea a la tabla indicedocs, referencia el indice que se le va a asignar al flujo'
;
COMMENT ON COLUMN flujosdatoscabeceras.obligatorio
    IS 'Indica si el campo indices es obligatorio para el flujo'
;
COMMENT ON COLUMN flujosdatoscabeceras.created
    IS 'Fecha de creacion del registro'
;

CREATE SEQUENCE flujosecuencias_id_seq INCREMENT 1 START 1
;

CREATE TABLE flujosecuencias ( 
	id integer DEFAULT nextval(('flujosecuencias_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	bandejasflujo_id integer NOT NULL,    --  Llave foranea a la tabla bandejasflujos, representa la bandeja del flujo a la cual se le va a configurar las posibles bandejas que se pueden asignar al paquete en esa bandeja 
	bandejasflujosig_id integer NOT NULL,    --  Llave foranea a la tabla bandejasflujos, representa la bandeja a la cual se podra enviar el paquete 
	cambiobandejamensaje_id integer NOT NULL    --  Llave foranea  a la tabla cambiobandejamensajes, indica el mensaje a mostrar en la opcion para pasar el paquete a la bandeja referenciada por bandejasflujosig_id 
)
;
COMMENT ON COLUMN flujosecuencias.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN flujosecuencias.bandejasflujo_id
    IS 'Llave foranea a la tabla bandejasflujos, representa la bandeja del flujo a la cual se le va a configurar las posibles bandejas que se pueden asignar al paquete en esa bandeja'
;
COMMENT ON COLUMN flujosecuencias.bandejasflujosig_id
    IS 'Llave foranea a la tabla bandejasflujos, representa la bandeja a la cual se podra enviar el paquete'
;
COMMENT ON COLUMN flujosecuencias.cambiobandejamensaje_id
    IS 'Llave foranea  a la tabla cambiobandejamensajes, indica el mensaje a mostrar en la opcion para pasar el paquete a la bandeja referenciada por bandejasflujosig_id'
;

CREATE SEQUENCE impresorasoficinas_id_seq INCREMENT 1 START 1
;

CREATE TABLE impresorasoficinas ( 
	id integer DEFAULT nextval(('impresorasoficinas_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	oficina_id integer NOT NULL,    --  Llave foranea a la tabla oficinas, representa la oficina a la cual pertenece la impresora. 
	direccionmfp varchar(20)    --  Direccion ip de la impresora mfp 
)
;
COMMENT ON COLUMN impresorasoficinas.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN impresorasoficinas.oficina_id
    IS 'Llave foranea a la tabla oficinas, representa la oficina a la cual pertenece la impresora.'
;
COMMENT ON COLUMN impresorasoficinas.direccionmfp
    IS 'Direccion ip de la impresora mfp'
;

CREATE SEQUENCE indicedocs_id_seq INCREMENT 1 START 1
;

CREATE TABLE indicedocs ( 
	id integer DEFAULT nextval(('indicedocs_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	nombre varchar(50) NOT NULL,    --  Nombre del indice 
	tipodato_id integer NOT NULL    --  Llave foranea a la tabla tipodatos, indica el tipo de datos que va a manejar el indice 
)
;
COMMENT ON COLUMN indicedocs.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN indicedocs.nombre
    IS 'Nombre del indice'
;
COMMENT ON COLUMN indicedocs.tipodato_id
    IS 'Llave foranea a la tabla tipodatos, indica el tipo de datos que va a manejar el indice'
;

CREATE SEQUENCE indicesopciones_id_seq INCREMENT 1 START 1
;

CREATE TABLE indicesopciones ( 
	id integer DEFAULT nextval(('indicesopciones_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	indicedoc_id integer NOT NULL,    --  Llave foranea a la tabla indicedocs, referencia al indice al cual pertenecen la opcion 
	valor varchar(50) NOT NULL,    --  Valor que va a manejar internamente la opcion 
	descripcion varchar(50) NOT NULL    --  Descripcion de la opcion del indice 
)
;
COMMENT ON COLUMN indicesopciones.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN indicesopciones.indicedoc_id
    IS 'Llave foranea a la tabla indicedocs, referencia al indice al cual pertenecen la opcion'
;
COMMENT ON COLUMN indicesopciones.valor
    IS 'Valor que va a manejar internamente la opcion'
;
COMMENT ON COLUMN indicesopciones.descripcion
    IS 'Descripcion de la opcion del indice'
;

CREATE SEQUENCE indicespadredocs_id_seq INCREMENT 1 START 1
;

CREATE TABLE indicespadredocs ( 
	id integer DEFAULT nextval(('indicespadredocs_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	padredocumentale_id integer NOT NULL,    --  Llave foranea a la tabla padredocumentales, indica el padre documental al cual se le van a configurar los indices 
	indicedoc_id integer NOT NULL,    --  Llave foranea a la tabla indicedocs, referencia el indice que se le va a configurar al padre documental 
	obligatorio boolean NOT NULL    --  Determina si el indice va a ser obligatorio para el padre documental 
)
;
COMMENT ON COLUMN indicespadredocs.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN indicespadredocs.padredocumentale_id
    IS 'Llave foranea a la tabla padredocumentales, indica el padre documental al cual se le van a configurar los indices'
;
COMMENT ON COLUMN indicespadredocs.indicedoc_id
    IS 'Llave foranea a la tabla indicedocs, referencia el indice que se le va a configurar al padre documental'
;
COMMENT ON COLUMN indicespadredocs.obligatorio
    IS 'Determina si el indice va a ser obligatorio para el padre documental'
;

CREATE SEQUENCE indicespadredocsvalor_id_seq INCREMENT 1 START 1
;

CREATE TABLE indicespadredocsvalor ( 
	id integer DEFAULT nextval(('indicespadredocsvalor_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	indicespadredoc_id integer NOT NULL,    --  Llave foranea a la tabla indicespadredocs, referencia al indice de un padre documental al cual se le ha asignado un valor par aun paquete 
	documentospaquete_id integer NOT NULL,    --  Llave foranea a la tabla documentospaquetes, referencia el documento que se ha indexado al paquete en el cual sele asigno un valor al indice del padre documental 
	valor varchar(100),    --  Valor del indice del padre documental en el paquete. 
	created timestamp without time zone    --  Fecha de creacion del registro 
)
;
COMMENT ON COLUMN indicespadredocsvalor.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN indicespadredocsvalor.indicespadredoc_id
    IS 'Llave foranea a la tabla indicespadredocs, referencia al indice de un padre documental al cual se le ha asignado un valor par aun paquete'
;
COMMENT ON COLUMN indicespadredocsvalor.documentospaquete_id
    IS 'Llave foranea a la tabla documentospaquetes, referencia el documento que se ha indexado al paquete en el cual sele asigno un valor al indice del padre documental'
;
COMMENT ON COLUMN indicespadredocsvalor.valor
    IS 'Valor del indice del padre documental en el paquete.'
;
COMMENT ON COLUMN indicespadredocsvalor.created
    IS 'Fecha de creacion del registro'
;

CREATE SEQUENCE infopaquetes_id_seq INCREMENT 1 START 1
;

CREATE TABLE infopaquetes ( 
	id integer DEFAULT nextval(('infopaquetes_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria a la tabla, autoincremental 
	paquete_id integer NOT NULL,    --  Llave foranea a la tabla paquetes, indica el paquete al cual pertenece la informacion 
	sello_obligatorio boolean,    --  indica si la factura requiere sello obligatorio  
	incluido_excel_novasoft boolean,    --  Determina si la factura ya fue incluida en el archivo generado para cargar a novasoft 
	cargado_novasoft_exito boolean,    --  Determina si la factura ya ha sido cargada exitosamente a Novasoft 
	incluido_excel_tesoreria boolean,    --  Determina si la factura ya ha sido incluida en el excel usado por tesoreria para cargar a novasoft 
	banco_id integer,    --  Llave foranea a la tabla bancos, indica el banco por el cual se va a pagar la factura. 
	created timestamp without time zone    --  Fecha de creacion del registro 
)
;
COMMENT ON COLUMN infopaquetes.id
    IS 'Llave primaria a la tabla, autoincremental'
;
COMMENT ON COLUMN infopaquetes.paquete_id
    IS 'Llave foranea a la tabla paquetes, indica el paquete al cual pertenece la informacion'
;
COMMENT ON COLUMN infopaquetes.sello_obligatorio
    IS 'indica si la factura requiere sello obligatorio '
;
COMMENT ON COLUMN infopaquetes.incluido_excel_novasoft
    IS 'Determina si la factura ya fue incluida en el archivo generado para cargar a novasoft'
;
COMMENT ON COLUMN infopaquetes.cargado_novasoft_exito
    IS 'Determina si la factura ya ha sido cargada exitosamente a Novasoft'
;
COMMENT ON COLUMN infopaquetes.incluido_excel_tesoreria
    IS 'Determina si la factura ya ha sido incluida en el excel usado por tesoreria para cargar a novasoft'
;
COMMENT ON COLUMN infopaquetes.banco_id
    IS 'Llave foranea a la tabla bancos, indica el banco por el cual se va a pagar la factura.'
;
COMMENT ON COLUMN infopaquetes.created
    IS 'Fecha de creacion del registro'
;

CREATE SEQUENCE notificaciones_id_seq INCREMENT 1 START 1
;

CREATE TABLE notificaciones ( 
	id integer DEFAULT nextval(('notificaciones_id_seq'::text)::regclass) NOT NULL,    --  Id de la tabla 
	asunto varchar(300),    --  Asunto de la notificacion 
	contenido text,    --  Contenido del correo 
	created timestamp without time zone
)
;
COMMENT ON COLUMN notificaciones.id
    IS 'Id de la tabla'
;
COMMENT ON COLUMN notificaciones.asunto
    IS 'Asunto de la notificacion'
;
COMMENT ON COLUMN notificaciones.contenido
    IS 'Contenido del correo'
;

CREATE SEQUENCE observaciones_id_seq INCREMENT 1 START 1
;

CREATE TABLE observaciones ( 
	id integer DEFAULT nextval(('observaciones_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	paquete_id integer NOT NULL,    --  Llave foranea de la tabla paquetes, representa el paquete al cual le pertenece la observacion. 
	valor text,    --  contenido de la Observacion  
	trazabilidade_id integer NOT NULL,    --  Llave foranea a la tabla trazabilidades, referencia la trazabilidad en la cual se ingresa la observacion 
	created timestamp without time zone    --  Fecha de creacion del registro 
)
;
COMMENT ON COLUMN observaciones.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN observaciones.paquete_id
    IS 'Llave foranea de la tabla paquetes, representa el paquete al cual le pertenece la observacion.'
;
COMMENT ON COLUMN observaciones.valor
    IS 'contenido de la Observacion '
;
COMMENT ON COLUMN observaciones.trazabilidade_id
    IS 'Llave foranea a la tabla trazabilidades, referencia la trazabilidad en la cual se ingresa la observacion'
;
COMMENT ON COLUMN observaciones.created
    IS 'Fecha de creacion del registro'
;

CREATE SEQUENCE oficinas_id_seq INCREMENT 1 START 1
;

CREATE TABLE oficinas ( 
	id integer DEFAULT nextval(('oficinas_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	descripcion varchar(50) NOT NULL,    --  Nombre/Descripcion de la oficina 
	ciudade_id integer NOT NULL    --  Llave foranea de la tabla ciudades, representa la ciudad a la cual pertenece la oficina. 
)
;
COMMENT ON COLUMN oficinas.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN oficinas.descripcion
    IS 'Nombre/Descripcion de la oficina'
;
COMMENT ON COLUMN oficinas.ciudade_id
    IS 'Llave foranea de la tabla ciudades, representa la ciudad a la cual pertenece la oficina.'
;

CREATE SEQUENCE oficinas_usuarios_id_seq INCREMENT 1 START 1
;

CREATE TABLE oficinas_usuarios ( 
	id integer DEFAULT nextval(('oficinas_usuarios_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	oficina_id integer NOT NULL,    --  Llave foranea de la tabla oficinas, que contiene la oficina a relacionar con el usuario 
	usuario_id integer NOT NULL    --  llave foranea a la tabla usuaios, representa el usuario relacionado con la oficina. 
)
;
COMMENT ON COLUMN oficinas_usuarios.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN oficinas_usuarios.oficina_id
    IS 'Llave foranea de la tabla oficinas, que contiene la oficina a relacionar con el usuario'
;
COMMENT ON COLUMN oficinas_usuarios.usuario_id
    IS 'llave foranea a la tabla usuaios, representa el usuario relacionado con la oficina.'
;

CREATE SEQUENCE padredocumentales_id_seq INCREMENT 1 START 1
;

CREATE TABLE padredocumentales ( 
	id integer DEFAULT nextval(('padredocumentales_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	nombre varchar(50) NOT NULL,    --  Nombre 
	codigo varchar(50)
)
;
COMMENT ON COLUMN padredocumentales.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN padredocumentales.nombre
    IS 'Nombre'
;

CREATE SEQUENCE paquetes_id_seq INCREMENT 1 START 1
;

CREATE TABLE paquetes ( 
	id integer DEFAULT nextval(('paquetes_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	consecutivo_paquete integer NOT NULL,    --  Consecutivo del paquete, se maneja un consecutivo por cada paquete de un tipo de paquete y una cabecera 
	bandejasflujo_id integer NOT NULL,    --  Llave foranea a la tabla bandejasflujos, que identifica la bandeja en el flujo en la cual se encuentra el paquete. 
	oficina_id integer NOT NULL,    --  llave foranea a la tabla oficinas, que contiene la ofiina a la cual pertenece el paquete. 
	fecha_paquete timestamp without time zone,    --  fecha del paquete. 
	tipopaquete_id integer NOT NULL,    --  Llave foranea a la tabla tipopaquetes, representa el Tipo de paquete al cual pertenece el paquete. 
	cabecerapaquete_id integer NOT NULL,    --  Llave foranea a la tabla cabecerapaquetes, que indica cual es la cabecera del paquete 
	usuario_id integer,    --  Id de la tabla usuario para guardar el usuario que crea el paquete. 
	created timestamp without time zone    --  Fecha creacion del paquete 
)
;
COMMENT ON COLUMN paquetes.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN paquetes.consecutivo_paquete
    IS 'Consecutivo del paquete, se maneja un consecutivo por cada paquete de un tipo de paquete y una cabecera'
;
COMMENT ON COLUMN paquetes.bandejasflujo_id
    IS 'Llave foranea a la tabla bandejasflujos, que identifica la bandeja en el flujo en la cual se encuentra el paquete.'
;
COMMENT ON COLUMN paquetes.oficina_id
    IS 'llave foranea a la tabla oficinas, que contiene la ofiina a la cual pertenece el paquete.'
;
COMMENT ON COLUMN paquetes.fecha_paquete
    IS 'fecha del paquete.'
;
COMMENT ON COLUMN paquetes.tipopaquete_id
    IS 'Llave foranea a la tabla tipopaquetes, representa el Tipo de paquete al cual pertenece el paquete.'
;
COMMENT ON COLUMN paquetes.cabecerapaquete_id
    IS 'Llave foranea a la tabla cabecerapaquetes, que indica cual es la cabecera del paquete'
;
COMMENT ON COLUMN paquetes.usuario_id
    IS 'Id de la tabla usuario para guardar el usuario que crea el paquete.'
;
COMMENT ON COLUMN paquetes.created
    IS 'Fecha creacion del paquete'
;

CREATE SEQUENCE paquetes_usuarios_id_seq INCREMENT 1 START 1
;

CREATE TABLE paquetes_usuarios ( 
	id integer DEFAULT nextval(('paquetes_usuarios_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	paquete_id integer NOT NULL,    --  Llave foranea a la tabla paquetes, contiene el paquete que se le asigna al usuario 
	usuario_id integer NOT NULL,    --  Llave foranea a la tabla usuarios, contiene el usuario que posee el paquete. 
	fecha time without time zone,    --  Fecha de asignacion del paquete 
	asignado boolean,    --  Determina si el paquete esta asignado al usuario 
	created timestamp without time zone    --  Fecha de creacion del registro 
)
;
COMMENT ON COLUMN paquetes_usuarios.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN paquetes_usuarios.paquete_id
    IS 'Llave foranea a la tabla paquetes, contiene el paquete que se le asigna al usuario'
;
COMMENT ON COLUMN paquetes_usuarios.usuario_id
    IS 'Llave foranea a la tabla usuarios, contiene el usuario que posee el paquete.'
;
COMMENT ON COLUMN paquetes_usuarios.fecha
    IS 'Fecha de asignacion del paquete'
;
COMMENT ON COLUMN paquetes_usuarios.asignado
    IS 'Determina si el paquete esta asignado al usuario'
;
COMMENT ON COLUMN paquetes_usuarios.created
    IS 'Fecha de creacion del registro'
;

CREATE SEQUENCE parametros_id_seq INCREMENT 1 START 1
;

CREATE TABLE parametros ( 
	id integer DEFAULT nextval(('parametros_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria a la tabla, autoincremental 
	nombre varchar(50) NOT NULL,    --  Nombre del parametro 
	valor varchar(100) NOT NULL,    --  Valor del parametro 
	created timestamp without time zone    --  Fecha de creacion del registro 
)
;
COMMENT ON COLUMN parametros.id
    IS 'Llave primaria a la tabla, autoincremental'
;
COMMENT ON COLUMN parametros.nombre
    IS 'Nombre del parametro'
;
COMMENT ON COLUMN parametros.valor
    IS 'Valor del parametro'
;
COMMENT ON COLUMN parametros.created
    IS 'Fecha de creacion del registro'
;

CREATE SEQUENCE perfiles_id_seq INCREMENT 1 START 1
;

CREATE TABLE perfiles ( 
	id integer DEFAULT nextval(('perfiles_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	nombre varchar(50) NOT NULL,    --  Nombre de perfil 
	tipoperfile_id integer NOT NULL    --  Llave foranea a la tabla tipoperfiles, representa el tipoperfil del perfil a crear. 
)
;
COMMENT ON COLUMN perfiles.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN perfiles.nombre
    IS 'Nombre de perfil'
;
COMMENT ON COLUMN perfiles.tipoperfile_id
    IS 'Llave foranea a la tabla tipoperfiles, representa el tipoperfil del perfil a crear.'
;

CREATE SEQUENCE permisobandejas_id_seq INCREMENT 1 START 1
;

CREATE TABLE permisobandejas ( 
	id integer DEFAULT nextval(('permisobandejas_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	nombre varchar(50) NOT NULL    --  Nombre del permiso de bandeja 
)
;
COMMENT ON COLUMN permisobandejas.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN permisobandejas.nombre
    IS 'Nombre del permiso de bandeja'
;

CREATE SEQUENCE permisodoccargopadredocs_id_seq INCREMENT 1 START 1
;

CREATE TABLE permisodoccargopadredocs ( 
	id integer DEFAULT nextval(('permisodoccargopadredocs_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	cargo_id integer NOT NULL,    --  Llave foranea a la tabla cargos, representa el cargo al cual se le configura el permiso sobre el tipo documental 
	padredocumentale_id integer NOT NULL,    --  Llave foranea a la tabla padredocumentales, representa el padredocumental(serie o tipo documental) sobre el cual se le configura el permiso del cargo 
	permisodoc_id integer NOT NULL,    --  Llave foranea a la tabla permisodocs, representa el permiso que se le asigna al cargo sobre el tipo documental 
	created timestamp without time zone    --  Fecha de creacion del registro 
)
;
COMMENT ON COLUMN permisodoccargopadredocs.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN permisodoccargopadredocs.cargo_id
    IS 'Llave foranea a la tabla cargos, representa el cargo al cual se le configura el permiso sobre el tipo documental'
;
COMMENT ON COLUMN permisodoccargopadredocs.padredocumentale_id
    IS 'Llave foranea a la tabla padredocumentales, representa el padredocumental(serie o tipo documental) sobre el cual se le configura el permiso del cargo'
;
COMMENT ON COLUMN permisodoccargopadredocs.permisodoc_id
    IS 'Llave foranea a la tabla permisodocs, representa el permiso que se le asigna al cargo sobre el tipo documental'
;
COMMENT ON COLUMN permisodoccargopadredocs.created
    IS 'Fecha de creacion del registro'
;

CREATE SEQUENCE permisodocs_id_seq INCREMENT 1 START 1
;

CREATE TABLE permisodocs ( 
	id integer DEFAULT nextval(('permisodocs_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria a la tabla, autoincremental 
	nombre varchar(50) NOT NULL    --  Nombre del permiso de documentos 
)
;
COMMENT ON COLUMN permisodocs.id
    IS 'Llave primaria a la tabla, autoincremental'
;
COMMENT ON COLUMN permisodocs.nombre
    IS 'Nombre del permiso de documentos'
;

CREATE SEQUENCE permisodocusuariopadredocs_id_seq INCREMENT 1 START 1
;

CREATE TABLE permisodocusuariopadredocs ( 
	id integer DEFAULT nextval(('permisodocusuariopadredocs_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria a la tabla, autoincremental 
	usuario_id integer NOT NULL,    --  Llave foranea a la tabla usuarios, representa el usuario al cual se le asignara el permiso sobre el tipo documental 
	permisodoc_id integer NOT NULL,    --  Llave foranea a la tabla permisodocs,representa el permiso que se va a configurar del usuario sobre el tipo documental  
	padredocumentale_id integer NOT NULL,    --  Llave foranea a la tabla padredocumentales, representa el padre documental (serie o tipo documental) al cual se le configura el permiso para el usuario 
	tipo_permiso boolean NOT NULL,    --  0: Indica que el permiso se controla por cargo 1: Indica que el permiso se controla por usuario 
	created timestamp without time zone    --  Fecha de creacion del registro 
)
;
COMMENT ON COLUMN permisodocusuariopadredocs.id
    IS 'Llave primaria a la tabla, autoincremental'
;
COMMENT ON COLUMN permisodocusuariopadredocs.usuario_id
    IS 'Llave foranea a la tabla usuarios, representa el usuario al cual se le asignara el permiso sobre el tipo documental'
;
COMMENT ON COLUMN permisodocusuariopadredocs.permisodoc_id
    IS 'Llave foranea a la tabla permisodocs,representa el permiso que se va a configurar del usuario sobre el tipo documental '
;
COMMENT ON COLUMN permisodocusuariopadredocs.padredocumentale_id
    IS 'Llave foranea a la tabla padredocumentales, representa el padre documental (serie o tipo documental) al cual se le configura el permiso para el usuario'
;
COMMENT ON COLUMN permisodocusuariopadredocs.tipo_permiso
    IS '0: Indica que el permiso se controla por cargo 1: Indica que el permiso se controla por usuario'
;
COMMENT ON COLUMN permisodocusuariopadredocs.created
    IS 'Fecha de creacion del registro'
;

CREATE SEQUENCE permisoscargobandejas_id_seq INCREMENT 1 START 1
;

CREATE TABLE permisoscargobandejas ( 
	id integer DEFAULT nextval(('permisoscargobandejas_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	cargo_id integer NOT NULL,    --  Llave foranea a la tabla cargos, representa el cargo al cual se le va a asignar el permiso sobre la bandeja. 
	permisobandeja_id integer NOT NULL,    --  Llave foranea a la tabla permisobandejas, representa el permiso que se le va a asignar al cargo sobre la bandeja en un flujo. 
	bandejasflujo_id integer NOT NULL,    --  Llave foranea a la tabla bandejasflujos, indica la bandeja en el flujo sobre la cual se le va a asignar el permiso al cargo. 
	created timestamp without time zone    --  Fecha de creacion del registro 
)
;
COMMENT ON COLUMN permisoscargobandejas.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN permisoscargobandejas.cargo_id
    IS 'Llave foranea a la tabla cargos, representa el cargo al cual se le va a asignar el permiso sobre la bandeja.'
;
COMMENT ON COLUMN permisoscargobandejas.permisobandeja_id
    IS 'Llave foranea a la tabla permisobandejas, representa el permiso que se le va a asignar al cargo sobre la bandeja en un flujo.'
;
COMMENT ON COLUMN permisoscargobandejas.bandejasflujo_id
    IS 'Llave foranea a la tabla bandejasflujos, indica la bandeja en el flujo sobre la cual se le va a asignar el permiso al cargo.'
;
COMMENT ON COLUMN permisoscargobandejas.created
    IS 'Fecha de creacion del registro'
;

CREATE SEQUENCE permisousuariobandejas_id_seq INCREMENT 1 START 1
;

CREATE TABLE permisousuariobandejas ( 
	id integer DEFAULT nextval(('permisousuariobandejas_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	bandejasflujo_id integer NOT NULL,    --  Llave foranea a la tabla bandejasflujos, representa la bandeja en el flujo a la cual se le configura el permiso al usuario. 
	usuario_id integer NOT NULL,    --  Llave foranea a la tabla usuarios, representa el usuario al cual se le configura el permiso en la bandeja. 
	permisobandeja_id integer NOT NULL,    --  Llave foranea a la tabla permisobandejas,contiene el permiso que va a tener el usuario sobre la bandeja. 
	tipo_permiso boolean NOT NULL,    --  0: Indica que el permiso se maneja por cargo 1: Indica que el permiso se maneja por usuario 
	created timestamp without time zone    --  Fecha de creacion del registro 
)
;
COMMENT ON COLUMN permisousuariobandejas.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN permisousuariobandejas.bandejasflujo_id
    IS 'Llave foranea a la tabla bandejasflujos, representa la bandeja en el flujo a la cual se le configura el permiso al usuario.'
;
COMMENT ON COLUMN permisousuariobandejas.usuario_id
    IS 'Llave foranea a la tabla usuarios, representa el usuario al cual se le configura el permiso en la bandeja.'
;
COMMENT ON COLUMN permisousuariobandejas.permisobandeja_id
    IS 'Llave foranea a la tabla permisobandejas,contiene el permiso que va a tener el usuario sobre la bandeja.'
;
COMMENT ON COLUMN permisousuariobandejas.tipo_permiso
    IS '0: Indica que el permiso se maneja por cargo 1: Indica que el permiso se maneja por usuario'
;
COMMENT ON COLUMN permisousuariobandejas.created
    IS 'Fecha de creacion del registro'
;

CREATE SEQUENCE regionales_id_seq INCREMENT 1 START 1
;

CREATE TABLE regionales ( 
	id integer DEFAULT nextval(('regionales_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	codigo varchar(20) NOT NULL,    --  Codigo de la regional 
	nombre varchar(50) NOT NULL,    --  Nombre de la regional 
	descripcion text,    --  Breve descripcion de la regional 
	estadoregistro_id integer NOT NULL    --  Llave foranea a la tabla estadoregistros, indica el estado de registro(activa, inactiva) de la regional 
)
;
COMMENT ON COLUMN regionales.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN regionales.codigo
    IS 'Codigo de la regional'
;
COMMENT ON COLUMN regionales.nombre
    IS 'Nombre de la regional'
;
COMMENT ON COLUMN regionales.descripcion
    IS 'Breve descripcion de la regional'
;
COMMENT ON COLUMN regionales.estadoregistro_id
    IS 'Llave foranea a la tabla estadoregistros, indica el estado de registro(activa, inactiva) de la regional'
;

CREATE SEQUENCE seriesdocumentales_id_seq INCREMENT 1 START 1
;

CREATE TABLE seriesdocumentales ( 
	id integer DEFAULT nextval(('seriesdocumentales_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	padredocumentale_id integer NOT NULL,    --  Llave foranea a la tabla padredocumentales, contiene el padre o la cabecera de la serie documental 
	seriesdocumentale_id integer    --  Llave foranea a la tabla seriesdocumentales, es decir a esta misma tabla, para permitir configurar series y subseries documentales. 
)
;
COMMENT ON COLUMN seriesdocumentales.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN seriesdocumentales.padredocumentale_id
    IS 'Llave foranea a la tabla padredocumentales, contiene el padre o la cabecera de la serie documental'
;
COMMENT ON COLUMN seriesdocumentales.seriesdocumentale_id
    IS 'Llave foranea a la tabla seriesdocumentales, es decir a esta misma tabla, para permitir configurar series y subseries documentales.'
;

CREATE SEQUENCE tipocampos_id_seq INCREMENT 1 START 1
;

CREATE TABLE tipocampos ( 
	id integer DEFAULT nextval(('tipocampos_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	nombre varchar(50) NOT NULL,    --  Nombre del tipo de campo 
	alias_nombre_campo varchar(10)    --  Alias o nombre abreviado del tipocampo 
)
;
COMMENT ON COLUMN tipocampos.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN tipocampos.nombre
    IS 'Nombre del tipo de campo'
;
COMMENT ON COLUMN tipocampos.alias_nombre_campo
    IS 'Alias o nombre abreviado del tipocampo'
;

CREATE SEQUENCE tipodatos_id_seq INCREMENT 1 START 1
;

CREATE TABLE tipodatos ( 
	id integer DEFAULT nextval(('tipodatos_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	nombre varchar(10) NOT NULL    --  Nombre del tipo de dato 
)
;
COMMENT ON COLUMN tipodatos.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN tipodatos.nombre
    IS 'Nombre del tipo de dato'
;

CREATE SEQUENCE tipodocumentalbandejas_id_seq INCREMENT 1 START 1
;

CREATE TABLE tipodocumentalbandejas ( 
	id integer DEFAULT nextval(('tipodocumentalbandejas_id_seq'::text)::regclass) NOT NULL,    --  Id de la tabla 
	bandeja_id integer NOT NULL,    --  Llave foranea al id de la tabla bandejas 
	tiposdocumentale_id integer NOT NULL,    --  Llave foranea a la tabla tiposdocumentales 
	obligatorio boolean,    --  Indica si el tipo documental se debe indexar obligatoriamente en la bandeja 
	gestiona_manual boolean    --  Indica si el tipo documental se marca como gestionado automaticamente, o se debe realizar de forma  manual. 
)
;
COMMENT ON TABLE tipodocumentalbandejas
    IS 'Tabla donde se configura si en una bandeja se debe configurar un tipo documental'
;
COMMENT ON COLUMN tipodocumentalbandejas.id
    IS 'Id de la tabla'
;
COMMENT ON COLUMN tipodocumentalbandejas.bandeja_id
    IS 'Llave foranea al id de la tabla bandejas'
;
COMMENT ON COLUMN tipodocumentalbandejas.tiposdocumentale_id
    IS 'Llave foranea a la tabla tiposdocumentales'
;
COMMENT ON COLUMN tipodocumentalbandejas.obligatorio
    IS 'Indica si el tipo documental se debe indexar obligatoriamente en la bandeja'
;
COMMENT ON COLUMN tipodocumentalbandejas.gestiona_manual
    IS 'Indica si el tipo documental se marca como gestionado automaticamente, o se debe realizar de forma  manual.'
;

CREATE SEQUENCE tipopaquetes_id_seq INCREMENT 1 START 1
;

CREATE TABLE tipopaquetes ( 
	id integer DEFAULT nextval(('tipopaquetes_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	nombre varchar(50) NOT NULL,    --  Nombre del tipo de paquete 
	seriesdocumentale_id integer NOT NULL    --  Llave foranea a la tabla seriesdocumentales, indica la serie documental a la cual pertenece la cabecera 
)
;
COMMENT ON COLUMN tipopaquetes.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN tipopaquetes.nombre
    IS 'Nombre del tipo de paquete'
;
COMMENT ON COLUMN tipopaquetes.seriesdocumentale_id
    IS 'Llave foranea a la tabla seriesdocumentales, indica la serie documental a la cual pertenece la cabecera'
;

CREATE SEQUENCE tipoperfiles_id_seq INCREMENT 1 START 1
;

CREATE TABLE tipoperfiles ( 
	id integer DEFAULT nextval(('tipoperfiles_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	nombre varchar(50) NOT NULL    --  Nombre del tipo de perfil 
)
;
COMMENT ON COLUMN tipoperfiles.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN tipoperfiles.nombre
    IS 'Nombre del tipo de perfil'
;

CREATE SEQUENCE tiposdocstipopaquetes_id_seq INCREMENT 1 START 1
;

CREATE TABLE tiposdocstipopaquetes ( 
	id integer DEFAULT nextval(('tiposdocstipopaquetes_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	tipopaquete_id integer NOT NULL,    --  Llave foranea a la tabla tipopaquetes, referencia al tipo de paquete que requiere del tipo documental correspondiente 
	tiposdocumentale_id integer NOT NULL,    --  Llave foranea a la tabla tiposdocumentales, referencia al tipo documental que es requerido para un tipo de paquete correspondiente 
	obligatorio boolean NOT NULL    --  Indica si el tipo documental es obligatorio o no para el tipo de paquete correspondiente. 
)
;
COMMENT ON COLUMN tiposdocstipopaquetes.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN tiposdocstipopaquetes.tipopaquete_id
    IS 'Llave foranea a la tabla tipopaquetes, referencia al tipo de paquete que requiere del tipo documental correspondiente'
;
COMMENT ON COLUMN tiposdocstipopaquetes.tiposdocumentale_id
    IS 'Llave foranea a la tabla tiposdocumentales, referencia al tipo documental que es requerido para un tipo de paquete correspondiente'
;
COMMENT ON COLUMN tiposdocstipopaquetes.obligatorio
    IS 'Indica si el tipo documental es obligatorio o no para el tipo de paquete correspondiente.'
;

CREATE SEQUENCE tiposdocumentales_id_seq INCREMENT 1 START 1
;

CREATE TABLE tiposdocumentales ( 
	id integer DEFAULT nextval(('tiposdocumentales_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	seriesdocumentale_id integer NOT NULL,    --  Llave foranea a la tabla seriesdocumentales, representa la serie documental a la cual pertenece el documento 
	alias_documento varchar(20) NOT NULL,    --  Alias del documento, nombre corto. 
	prefijo varchar(10),    --  Prefijo del documento 
	observacion text,    --  Breve descripcion del documento, si lo requiere. 
	padredocumentale_id integer NOT NULL    --  Llave foranea a la tabla padredocumentales, contiene el padre o la cabecera del tipo documental 
)
;
COMMENT ON COLUMN tiposdocumentales.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN tiposdocumentales.seriesdocumentale_id
    IS 'Llave foranea a la tabla seriesdocumentales, representa la serie documental a la cual pertenece el documento'
;
COMMENT ON COLUMN tiposdocumentales.alias_documento
    IS 'Alias del documento, nombre corto.'
;
COMMENT ON COLUMN tiposdocumentales.prefijo
    IS 'Prefijo del documento'
;
COMMENT ON COLUMN tiposdocumentales.observacion
    IS 'Breve descripcion del documento, si lo requiere.'
;
COMMENT ON COLUMN tiposdocumentales.padredocumentale_id
    IS 'Llave foranea a la tabla padredocumentales, contiene el padre o la cabecera del tipo documental'
;

CREATE SEQUENCE trazabilidades_id_seq INCREMENT 1 START 1
;

CREATE TABLE trazabilidades ( 
	id integer DEFAULT nextval(('trazabilidades_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental 
	usuario_id integer NOT NULL,    --  LLave foranea a la tabla usuarios, indica el usuario quien gestiono el paquete. 
	bandejasflujo_id integer NOT NULL,    --  Llave foranea a la tabla bandejasflujos, indica la bandeja de la que viene el paquete. es decir, bandeja origen 
	paquete_id integer NOT NULL,    --  Llave foranea a la tabla paquetes, indica el paquete que se gestiono. 
	indicador_actual boolean,
	paquetesusuario_id integer,
	diaspromedio integer,    --  Numero de dias que se tardo en gestionar el paquete en esa bandeja. 
	bandejaflujodestino_id integer NOT NULL,    --  Llave foranea a la tabla bandejasflujos, indica la bandeja a la que se envia el paquete. 
	created timestamp without time zone    --  Indica la fecha de creacion del registro. 
)
;
COMMENT ON COLUMN trazabilidades.id
    IS 'Llave primaria de la tabla, autoincremental'
;
COMMENT ON COLUMN trazabilidades.usuario_id
    IS 'LLave foranea a la tabla usuarios, indica el usuario quien gestiono el paquete.'
;
COMMENT ON COLUMN trazabilidades.bandejasflujo_id
    IS 'Llave foranea a la tabla bandejasflujos, indica la bandeja de la que viene el paquete. es decir, bandeja origen'
;
COMMENT ON COLUMN trazabilidades.paquete_id
    IS 'Llave foranea a la tabla paquetes, indica el paquete que se gestiono.'
;
COMMENT ON COLUMN trazabilidades.diaspromedio
    IS 'Numero de dias que se tardo en gestionar el paquete en esa bandeja.'
;
COMMENT ON COLUMN trazabilidades.bandejaflujodestino_id
    IS 'Llave foranea a la tabla bandejasflujos, indica la bandeja a la que se envia el paquete.'
;
COMMENT ON COLUMN trazabilidades.created
    IS 'Indica la fecha de creacion del registro.'
;

CREATE SEQUENCE usuarios_id_seq INCREMENT 1 START 1
;

CREATE TABLE usuarios ( 
	id integer DEFAULT nextval(('usuarios_id_seq'::text)::regclass) NOT NULL,    --  Llave primaria de la tabla, autoincremental. 
	nombre varchar(100) NOT NULL,    --  Nombre del usuario 
	username varchar(20) NOT NULL,    --  Nombre de usuario con el que se autentica el usuario ante el sistema 
	password varchar(100) NOT NULL,    --  Password para autenticarse ante el sistema 
	perfile_id integer NOT NULL,    --  Llave foranea a la tabla perfiles, que contiene el perfil al que pertenece el usuario. 
	cargo_id integer NOT NULL,    --  Llave foranea a la tabla cargos, contiene el cargo al cual pertenece el usuario 
	correo_electronico varchar(100),    --  Correo electronico del usuario 
	telefono varchar(50),    --  Telefono del usuario 
	estadoregistro_id integer NOT NULL,    --  Llave foranea a la tabla estadoregistros, que representa el estado de registro(activo, inactivo) del usuario 
	num_intentos integer DEFAULT 0 NOT NULL,    --  Indica el numero de intentos fallidos consecutivos que el usuario ha intentando autenticarse ante el sistema 
	monto_aprobacion decimal DEFAULT 0,    --  Indica la cantidad de Salarios Minimos Mensuales Legales Vigentes que podra aprobar. 
	created timestamp without time zone    --  Fecha de creacion del registro 
)
;
COMMENT ON COLUMN usuarios.id
    IS 'Llave primaria de la tabla, autoincremental.'
;
COMMENT ON COLUMN usuarios.nombre
    IS 'Nombre del usuario'
;
COMMENT ON COLUMN usuarios.username
    IS 'Nombre de usuario con el que se autentica el usuario ante el sistema'
;
COMMENT ON COLUMN usuarios.password
    IS 'Password para autenticarse ante el sistema'
;
COMMENT ON COLUMN usuarios.perfile_id
    IS 'Llave foranea a la tabla perfiles, que contiene el perfil al que pertenece el usuario.'
;
COMMENT ON COLUMN usuarios.cargo_id
    IS 'Llave foranea a la tabla cargos, contiene el cargo al cual pertenece el usuario'
;
COMMENT ON COLUMN usuarios.correo_electronico
    IS 'Correo electronico del usuario'
;
COMMENT ON COLUMN usuarios.telefono
    IS 'Telefono del usuario'
;
COMMENT ON COLUMN usuarios.estadoregistro_id
    IS 'Llave foranea a la tabla estadoregistros, que representa el estado de registro(activo, inactivo) del usuario'
;
COMMENT ON COLUMN usuarios.num_intentos
    IS 'Indica el numero de intentos fallidos consecutivos que el usuario ha intentando autenticarse ante el sistema'
;
COMMENT ON COLUMN usuarios.monto_aprobacion
    IS 'Indica la cantidad de Salarios Minimos Mensuales Legales Vigentes que podra aprobar.'
;
COMMENT ON COLUMN usuarios.created
    IS 'Fecha de creacion del registro'
;


--  Create Indexes 
CREATE INDEX IXFK_auditorias_usuarios
	ON auditorias (usuario_id)
;
ALTER TABLE bancos
	ADD CONSTRAINT UQ_bancos_nombre UNIQUE (nombre)
;
CREATE INDEX IXFK_bandejacampos_campos
	ON bandejacampos (campo_id)
;
CREATE INDEX IXFK_bandejacampos_bandejas
	ON bandejacampos (bandeja_id)
;
CREATE INDEX IXFK_bandejacampovalores_paquetes
	ON bandejacampovalores (paquete_id)
;
CREATE INDEX IXFK_bandejacampovalores_bandejacampos
	ON bandejacampovalores (bandejacampo_id)
;
ALTER TABLE bandejas
	ADD CONSTRAINT UQ_bandejas_nombre UNIQUE (nombre)
;
CREATE INDEX IXFK_bandejasflujos_bandejas
	ON bandejasflujos (bandeja_id)
;
CREATE INDEX IXFK_bandejasflujos_flujos
	ON bandejasflujos (flujo_id)
;
CREATE INDEX IXFK_seriedocscabeceras_centroscostos
	ON cabecerapaquetes (centroscosto_id)
;
CREATE INDEX IXFK_cabecerapaquetes_flujos
	ON cabecerapaquetes (flujo_id)
;
CREATE INDEX IXFK_cabecerapaquetes_entidades
	ON cabecerapaquetes (entidade_id)
;
ALTER TABLE cabecerapaquetes
	ADD CONSTRAINT IDX_Unique_CabecPaq UNIQUE (consecutivo_por_flujo, flujo_id)
;
CREATE INDEX IXFK_campos_tipocampos
	ON campos (tipocampo_id)
;
CREATE INDEX IXFK_campos_tipodatos
	ON campos (tipodato_id)
;
ALTER TABLE cargos
	ADD CONSTRAINT UQ_cargos_nombre UNIQUE (nombre)
;
ALTER TABLE centroscostos
	ADD CONSTRAINT UQ_centroscostos_nombre UNIQUE (nombre)
;
CREATE INDEX IXFK_ciudades_regionales
	ON ciudades (regionale_id)
;
CREATE INDEX IXFK_ciudades_estadoregistros
	ON ciudades (estadoregistro_id)
;
ALTER TABLE ciudades
	ADD CONSTRAINT UQ_ciudades_nombre UNIQUE (nombre)
;
ALTER TABLE configuraciondatos
	ADD CONSTRAINT UQ_configuraciondatos_nombre UNIQUE (nombre)
;
CREATE INDEX IXFK_consecutivoflujos_flujos
	ON consecutivoflujos (flujo_id)
;
ALTER TABLE consecutivoflujos
	ADD CONSTRAINT UQ_consecutivoflujos_flujo_id UNIQUE (flujo_id)
;
CREATE INDEX IXFK_consecutivopaquetes_cabecerapaquetes
	ON consecutivopaquetes (cabecerapaquete_id)
;
CREATE INDEX IXFK_consecutivopaquetes_tipopaquetes
	ON consecutivopaquetes (tipopaquete_id)
;
ALTER TABLE consecutivopaquetes
	ADD CONSTRAINT IDX_Unique_ConsecPaq UNIQUE (cabecerapaquete_id, tipopaquete_id)
;
CREATE INDEX IXFK_datoscabeceravalores_indicedocs
	ON datoscabeceravalores (indicedoc_id)
;
CREATE INDEX IXFK_datoscabeceravalores_cabecerapaquetes
	ON datoscabeceravalores (cabecerapaquete_id)
;
ALTER TABLE datoscabeceravalores
	ADD CONSTRAINT IDX_Unique_DatosCabecVal UNIQUE (indicedoc_id, cabecerapaquete_id)
;
CREATE INDEX IXFK_destinatarios_notificaciones
	ON destinatarios (notificacione_id)
;
CREATE INDEX IXFK_distribucionmontos_paquetes
	ON distribucionmontos (paquete_id)
;
CREATE INDEX IXFK_distribucionmontos_centroscostos
	ON distribucionmontos (centroscosto_id)
;
CREATE INDEX IXFK_documentospaquetes_tiposdocumentales
	ON documentospaquetes (tiposdocumentale_id)
;
CREATE INDEX IXFK_documentospaquetes_paquetes
	ON documentospaquetes (paquete_id)
;
ALTER TABLE entidades
	ADD CONSTRAINT UQ_entidades_nombre UNIQUE (nombre)
;
CREATE INDEX IXFK_entidadesusuarios_entidades
	ON entidadesusuarios (entidade_id)
;
CREATE INDEX IXFK_entidadesusuarios_usuarios
	ON entidadesusuarios (usuario_id)
;
ALTER TABLE entidadesusuarios
	ADD CONSTRAINT IDX_Unique_EntidadUsu UNIQUE (usuario_id, entidade_id)
;
ALTER TABLE estadoregistros
	ADD CONSTRAINT UQ_estadoregistros_nombre UNIQUE (nombre)
;
ALTER TABLE flujos
	ADD CONSTRAINT UQ_flujos_nombre UNIQUE (nombre)
;
CREATE INDEX IXFK_flujosdatoscabeceras_indicedocs
	ON flujosdatoscabeceras (indicedoc_id)
;
CREATE INDEX IXFK_flujosdatoscabeceras_flujos
	ON flujosdatoscabeceras (flujo_id)
;
ALTER TABLE flujosdatoscabeceras
	ADD CONSTRAINT IDX_Unique_FlujoDatosCabec UNIQUE (flujo_id, indicedoc_id)
;
CREATE INDEX IXFK_flujosecuencias_bandejasflujos
	ON flujosecuencias (bandejasflujo_id)
;
CREATE INDEX IXFK_flujosecuencias_bandejasflujos_02
	ON flujosecuencias (bandejasflujosig_id)
;
CREATE INDEX IXFK_flujosecuencias_cambiobandejamensajes
	ON flujosecuencias (cambiobandejamensaje_id)
;
ALTER TABLE flujosecuencias
	ADD CONSTRAINT IDX_Unique_FlujoSec UNIQUE (bandejasflujo_id, bandejasflujosig_id)
;
CREATE INDEX IXFK_impresorasoficinas_oficinas
	ON impresorasoficinas (oficina_id)
;
CREATE INDEX IXFK_indicedocs_tipodatos
	ON indicedocs (tipodato_id)
;
ALTER TABLE indicedocs
	ADD CONSTRAINT UQ_indicedocs_nombre UNIQUE (nombre)
;
CREATE INDEX IXFK_indicesopciones_indicedocs
	ON indicesopciones (indicedoc_id)
;
CREATE INDEX IXFK_indicespadredocs_indicedocs
	ON indicespadredocs (indicedoc_id)
;
CREATE INDEX IXFK_indicespadredocs_padredocumentales
	ON indicespadredocs (padredocumentale_id)
;
ALTER TABLE indicespadredocs
	ADD CONSTRAINT IDX_Unique_IndicesPadredoc UNIQUE (padredocumentale_id, indicedoc_id)
;
CREATE INDEX IXFK_indicespadredocsvalor_indicespadredocs
	ON indicespadredocsvalor (indicespadredoc_id)
;
CREATE INDEX IXFK_indicespadredocsvalor_documentospaquetes
	ON indicespadredocsvalor (documentospaquete_id)
;
ALTER TABLE indicespadredocsvalor
	ADD CONSTRAINT IDX_Unique_IndicePadreDocValor UNIQUE (indicespadredoc_id, documentospaquete_id)
;
CREATE INDEX IXFK_infopaquetes_bancos
	ON infopaquetes (banco_id)
;
CREATE INDEX IXFK_infopaquetes_paquetes
	ON infopaquetes (paquete_id)
;
ALTER TABLE infopaquetes
	ADD CONSTRAINT UQ_infopaquetes_paquete_id UNIQUE (paquete_id)
;
CREATE INDEX IXFK_observaciones_paquetes
	ON observaciones (paquete_id)
;
CREATE INDEX IXFK_observaciones_trazabilidades
	ON observaciones (trazabilidade_id)
;
CREATE INDEX IXFK_oficinas_ciudades
	ON oficinas (ciudade_id)
;
ALTER TABLE oficinas
	ADD CONSTRAINT UQ_oficinas_descripcion UNIQUE (descripcion)
;
CREATE INDEX IXFK_oficinas_usuarios_oficinas
	ON oficinas_usuarios (oficina_id)
;
CREATE INDEX IXFK_oficinas_usuarios_usuarios
	ON oficinas_usuarios (usuario_id)
;
ALTER TABLE oficinas_usuarios
	ADD CONSTRAINT IDX_Unique_OficUsu UNIQUE (oficina_id, usuario_id)
;
CREATE INDEX IXFK_paquetes_bandejasflujos
	ON paquetes (bandejasflujo_id)
;
CREATE INDEX IXFK_paquetes_oficinas
	ON paquetes (oficina_id)
;
CREATE INDEX IXFK_paquetes_cabecerapaquetes
	ON paquetes (cabecerapaquete_id)
;
CREATE INDEX IXFK_paquetes_tipopaquetes
	ON paquetes (tipopaquete_id)
;
CREATE INDEX IXFK_paquetes_usuarios
	ON paquetes (usuario_id)
;
CREATE INDEX IXFK_paquetes_usuarios_paquetes
	ON paquetes_usuarios (paquete_id)
;
CREATE INDEX IXFK_paquetes_usuarios_usuarios
	ON paquetes_usuarios (usuario_id)
;
ALTER TABLE parametros
	ADD CONSTRAINT UQ_parametros_nombre UNIQUE (nombre)
;
CREATE INDEX IXFK_perfiles_tipoperfiles
	ON perfiles (tipoperfile_id)
;
ALTER TABLE perfiles
	ADD CONSTRAINT UQ_perfiles_nombre UNIQUE (nombre)
;
ALTER TABLE permisobandejas
	ADD CONSTRAINT UQ_permisobandejas_nombre UNIQUE (nombre)
;
CREATE INDEX IXFK_permisodoccargopadredocs_padredocumentales
	ON permisodoccargopadredocs (padredocumentale_id)
;
CREATE INDEX IXFK_permisodoccargopadredocs_permisodocs
	ON permisodoccargopadredocs (permisodoc_id)
;
CREATE INDEX IXFK_permisodoccargopadredocs_cargos
	ON permisodoccargopadredocs (cargo_id)
;
ALTER TABLE permisodoccargopadredocs
	ADD CONSTRAINT IDX_Unique_PermCargoPadredoc UNIQUE (cargo_id, padredocumentale_id, permisodoc_id)
;
ALTER TABLE permisodocs
	ADD CONSTRAINT UQ_permisodocs_nombre UNIQUE (nombre)
;
CREATE INDEX IXFK_permisodocusuariopadredocs_padredocumentales
	ON permisodocusuariopadredocs (padredocumentale_id)
;
CREATE INDEX IXFK_permisodocusuariopadredocs_permisodocs
	ON permisodocusuariopadredocs (permisodoc_id)
;
CREATE INDEX IXFK_permisodocusuariopadredocs_usuarios
	ON permisodocusuariopadredocs (usuario_id)
;
ALTER TABLE permisodocusuariopadredocs
	ADD CONSTRAINT IDX_Unique_PermUsuPadredoc UNIQUE (usuario_id, permisodoc_id, padredocumentale_id)
;
CREATE INDEX IXFK_permisoscargobandejas_bandejasflujos
	ON permisoscargobandejas (bandejasflujo_id)
;
CREATE INDEX IXFK_permisoscargobandejas_cargos
	ON permisoscargobandejas (cargo_id)
;
CREATE INDEX IXFK_permisoscargobandejas_permisobandejas
	ON permisoscargobandejas (permisobandeja_id)
;
ALTER TABLE permisoscargobandejas
	ADD CONSTRAINT IDX_Unique_PermCargoBand UNIQUE (cargo_id, permisobandeja_id, bandejasflujo_id)
;
CREATE INDEX IXFK_permisousuariobandejas_permisobandejas
	ON permisousuariobandejas (permisobandeja_id)
;
CREATE INDEX IXFK_permisousuariobandejas_usuarios
	ON permisousuariobandejas (usuario_id)
;
CREATE INDEX IXFK_permisousuariobandejas_bandejasflujos
	ON permisousuariobandejas (bandejasflujo_id)
;
ALTER TABLE permisousuariobandejas
	ADD CONSTRAINT IDX_Unique_PermUsuBand UNIQUE (bandejasflujo_id, usuario_id, permisobandeja_id)
;
CREATE INDEX IXFK_regionales_estadoregistros
	ON regionales (estadoregistro_id)
;
ALTER TABLE regionales
	ADD CONSTRAINT UQ_regionales_nombre UNIQUE (nombre)
;
CREATE INDEX IXFK_seriesdocumentales_padredocumentales
	ON seriesdocumentales (padredocumentale_id)
;
CREATE INDEX IXFK_seriesdocumentales_seriesdocumentales
	ON seriesdocumentales (seriesdocumentale_id)
;
ALTER TABLE tipocampos
	ADD CONSTRAINT UQ_tipocampos_nombre UNIQUE (nombre)
;
ALTER TABLE tipodatos
	ADD CONSTRAINT UQ_tipodatos_nombre UNIQUE (nombre)
;
CREATE INDEX IXFK_tipodocumentalbandejas_tiposdocumentales
	ON tipodocumentalbandejas (tiposdocumentale_id)
;
CREATE INDEX IXFK_tipodocumentalbandejas_bandejas
	ON tipodocumentalbandejas (bandeja_id)
;
ALTER TABLE tipodocumentalbandejas
	ADD CONSTRAINT IDX_Unique_TipoDocBandeja UNIQUE (bandeja_id, tiposdocumentale_id)
;
CREATE INDEX IXFK_tipopaquetes_seriesdocumentales
	ON tipopaquetes (seriesdocumentale_id)
;
ALTER TABLE tipopaquetes
	ADD CONSTRAINT UQ_tipopaquetes_nombre UNIQUE (nombre)
;
ALTER TABLE tipoperfiles
	ADD CONSTRAINT UQ_tipoperfiles_nombre UNIQUE (nombre)
;
CREATE INDEX IXFK_tiposdocstipopaquetes_tiposdocumentales
	ON tiposdocstipopaquetes (tiposdocumentale_id)
;
CREATE INDEX IXFK_tiposdocstipopaquetes_tipopaquetes
	ON tiposdocstipopaquetes (tipopaquete_id)
;
ALTER TABLE tiposdocstipopaquetes
	ADD CONSTRAINT IDX_Unique_TipoDocTipoPaq UNIQUE (tipopaquete_id, tiposdocumentale_id)
;
CREATE INDEX IXFK_tiposdocumentales_seriesdocumentales
	ON tiposdocumentales (seriesdocumentale_id)
;
CREATE INDEX IXFK_tiposdocumentales_padredocumentales
	ON tiposdocumentales (padredocumentale_id)
;
CREATE INDEX IXFK_trazabilidades_bandejasflujos
	ON trazabilidades (bandejasflujo_id)
;
CREATE INDEX IXFK_trazabilidades_usuarios
	ON trazabilidades (usuario_id)
;
CREATE INDEX IXFK_trazabilidades_paquetes
	ON trazabilidades (paquete_id)
;
CREATE INDEX IXFK_trazabilidades_paquetes_usuarios
	ON trazabilidades (paquetesusuario_id)
;
CREATE INDEX IXFK_trazabilidades_bandejasflujos_02
	ON trazabilidades (bandejaflujodestino_id)
;
CREATE INDEX IXFK_usuarios_perfiles
	ON usuarios (perfile_id)
;
CREATE INDEX IXFK_usuarios_cargos
	ON usuarios (cargo_id)
;
CREATE INDEX IXFK_usuarios_estadoregistros
	ON usuarios (estadoregistro_id)
;
ALTER TABLE usuarios
	ADD CONSTRAINT UQ_usuarios_username UNIQUE (username)
;
--  Create Primary Key Constraints 
ALTER TABLE auditorias ADD CONSTRAINT PK_auditorias 
	PRIMARY KEY (id)
;


ALTER TABLE bancos ADD CONSTRAINT PK_bancos 
	PRIMARY KEY (id)
;


ALTER TABLE bandejacampos ADD CONSTRAINT PK_bandejacampos 
	PRIMARY KEY (id)
;


ALTER TABLE bandejacampovalores ADD CONSTRAINT PK_bandejacampovalores 
	PRIMARY KEY (id)
;


ALTER TABLE bandejas ADD CONSTRAINT PK_bandejas 
	PRIMARY KEY (id)
;


ALTER TABLE bandejasflujos ADD CONSTRAINT PK_bandejasflujos 
	PRIMARY KEY (id)
;


ALTER TABLE cabecerapaquetes ADD CONSTRAINT PK_cabecerapaquetes 
	PRIMARY KEY (id)
;


ALTER TABLE cambiobandejamensajes ADD CONSTRAINT PK_cambiobandejamensajes 
	PRIMARY KEY (id)
;


ALTER TABLE campos ADD CONSTRAINT PK_campos 
	PRIMARY KEY (id)
;


ALTER TABLE cargos ADD CONSTRAINT PK_cargos 
	PRIMARY KEY (id)
;


ALTER TABLE centroscostos ADD CONSTRAINT PK_centroscostos 
	PRIMARY KEY (id)
;


ALTER TABLE ciudades ADD CONSTRAINT PK_ciudades 
	PRIMARY KEY (id)
;


ALTER TABLE configuraciondatos ADD CONSTRAINT PK_configuraciondatos 
	PRIMARY KEY (id)
;


ALTER TABLE consecutivoflujos ADD CONSTRAINT PK_consecutivoflujos 
	PRIMARY KEY (id)
;


ALTER TABLE consecutivopaquetes ADD CONSTRAINT PK_consecutivopaquetes 
	PRIMARY KEY (id)
;


ALTER TABLE datoscabeceravalores ADD CONSTRAINT PK_datoscabeceravalores 
	PRIMARY KEY (id)
;


ALTER TABLE destinatarios ADD CONSTRAINT PK_destinatarios 
	PRIMARY KEY (id)
;


ALTER TABLE distribucionmontos ADD CONSTRAINT PK_distribucionmontos 
	PRIMARY KEY (id)
;


ALTER TABLE documentospaquetes ADD CONSTRAINT PK_documentospaquetes 
	PRIMARY KEY (id)
;


ALTER TABLE entidades ADD CONSTRAINT PK_entidades 
	PRIMARY KEY (id)
;


ALTER TABLE entidadesusuarios ADD CONSTRAINT PK_entidadesusuarios 
	PRIMARY KEY (id)
;


ALTER TABLE estadoregistros ADD CONSTRAINT PK_estadoregistros 
	PRIMARY KEY (id)
;


ALTER TABLE flujos ADD CONSTRAINT PK_flujos 
	PRIMARY KEY (id)
;


ALTER TABLE flujosdatoscabeceras ADD CONSTRAINT PK_flujosdatoscabeceras 
	PRIMARY KEY (id)
;


ALTER TABLE flujosecuencias ADD CONSTRAINT PK_flujosecuencias 
	PRIMARY KEY (id)
;


ALTER TABLE impresorasoficinas ADD CONSTRAINT PK_impresorasoficinas 
	PRIMARY KEY (id)
;


ALTER TABLE indicedocs ADD CONSTRAINT PK_indicedocs 
	PRIMARY KEY (id)
;


ALTER TABLE indicesopciones ADD CONSTRAINT PK_indicesopciones 
	PRIMARY KEY (id)
;


ALTER TABLE indicespadredocs ADD CONSTRAINT PK_indicespadredocs 
	PRIMARY KEY (id)
;


ALTER TABLE indicespadredocsvalor ADD CONSTRAINT PK_indicespadredocsvalor 
	PRIMARY KEY (id)
;


ALTER TABLE infopaquetes ADD CONSTRAINT PK_infopaquetes 
	PRIMARY KEY (id)
;


ALTER TABLE notificaciones ADD CONSTRAINT PK_notificaciones 
	PRIMARY KEY (id)
;


ALTER TABLE observaciones ADD CONSTRAINT PK_observaciones 
	PRIMARY KEY (id)
;


ALTER TABLE oficinas ADD CONSTRAINT PK_oficinas 
	PRIMARY KEY (id)
;


ALTER TABLE oficinas_usuarios ADD CONSTRAINT PK_oficinas_usuarios 
	PRIMARY KEY (id)
;


ALTER TABLE padredocumentales ADD CONSTRAINT PK_padredocumentales 
	PRIMARY KEY (id)
;


ALTER TABLE paquetes ADD CONSTRAINT PK_paquetes 
	PRIMARY KEY (id)
;


ALTER TABLE paquetes_usuarios ADD CONSTRAINT PK_paquetes_usuarios 
	PRIMARY KEY (id)
;


ALTER TABLE parametros ADD CONSTRAINT PK_parametros 
	PRIMARY KEY (id)
;


ALTER TABLE perfiles ADD CONSTRAINT PK_perfiles 
	PRIMARY KEY (id)
;


ALTER TABLE permisobandejas ADD CONSTRAINT PK_permisobandejas 
	PRIMARY KEY (id)
;


ALTER TABLE permisodoccargopadredocs ADD CONSTRAINT PK_permisodoccargopadredocs 
	PRIMARY KEY (id)
;


ALTER TABLE permisodocs ADD CONSTRAINT PK_permisodocs 
	PRIMARY KEY (id)
;


ALTER TABLE permisodocusuariopadredocs ADD CONSTRAINT PK_permisodocusuariopadredocs 
	PRIMARY KEY (id)
;


ALTER TABLE permisoscargobandejas ADD CONSTRAINT PK_permisoscargobandejas 
	PRIMARY KEY (id)
;


ALTER TABLE permisousuariobandejas ADD CONSTRAINT PK_permisousuariobandejas 
	PRIMARY KEY (id)
;


ALTER TABLE regionales ADD CONSTRAINT PK_regionales 
	PRIMARY KEY (id)
;


ALTER TABLE seriesdocumentales ADD CONSTRAINT PK_seriesdocumentales 
	PRIMARY KEY (id)
;


ALTER TABLE tipocampos ADD CONSTRAINT PK_tipocampos 
	PRIMARY KEY (id)
;


ALTER TABLE tipodatos ADD CONSTRAINT PK_tipodatos 
	PRIMARY KEY (id)
;


ALTER TABLE tipodocumentalbandejas ADD CONSTRAINT PK_tipodocumentalbandejas 
	PRIMARY KEY (id)
;


ALTER TABLE tipopaquetes ADD CONSTRAINT PK_tipopaquetes 
	PRIMARY KEY (id)
;


ALTER TABLE tipoperfiles ADD CONSTRAINT PK_tipoperfiles 
	PRIMARY KEY (id)
;


ALTER TABLE tiposdocstipopaquetes ADD CONSTRAINT PK_tiposdocstipopaquetes 
	PRIMARY KEY (id)
;


ALTER TABLE tiposdocumentales ADD CONSTRAINT PK_documentos 
	PRIMARY KEY (id)
;


ALTER TABLE trazabilidades ADD CONSTRAINT PK_trazabilidades 
	PRIMARY KEY (id)
;


ALTER TABLE usuarios ADD CONSTRAINT PK_usuarios 
	PRIMARY KEY (id)
;




--  Create Foreign Key Constraints 
ALTER TABLE auditorias ADD CONSTRAINT FK_auditorias_usuarios 
	FOREIGN KEY (usuario_id) REFERENCES usuarios (id)
ON DELETE RESTRICT
;

ALTER TABLE bandejacampos ADD CONSTRAINT FK_bandejacampos_campos 
	FOREIGN KEY (campo_id) REFERENCES campos (id)
ON DELETE RESTRICT
;

ALTER TABLE bandejacampos ADD CONSTRAINT FK_bandejacampos_bandejas 
	FOREIGN KEY (bandeja_id) REFERENCES bandejas (id)
ON DELETE RESTRICT
;

ALTER TABLE bandejacampovalores ADD CONSTRAINT FK_bandejacampovalores_paquetes 
	FOREIGN KEY (paquete_id) REFERENCES paquetes (id)
ON DELETE RESTRICT
;

ALTER TABLE bandejacampovalores ADD CONSTRAINT FK_bandejacampovalores_bandejacampos 
	FOREIGN KEY (bandejacampo_id) REFERENCES bandejacampos (id)
ON DELETE RESTRICT
;

ALTER TABLE bandejasflujos ADD CONSTRAINT FK_bandejasflujos_bandejas 
	FOREIGN KEY (bandeja_id) REFERENCES bandejas (id)
ON DELETE RESTRICT
;

ALTER TABLE bandejasflujos ADD CONSTRAINT FK_bandejasflujos_flujos 
	FOREIGN KEY (flujo_id) REFERENCES flujos (id)
ON DELETE RESTRICT
;

ALTER TABLE cabecerapaquetes ADD CONSTRAINT FK_seriedocscabeceras_centroscostos 
	FOREIGN KEY (centroscosto_id) REFERENCES centroscostos (id)
ON DELETE RESTRICT
;

ALTER TABLE cabecerapaquetes ADD CONSTRAINT FK_cabecerapaquetes_flujos 
	FOREIGN KEY (flujo_id) REFERENCES flujos (id)
ON DELETE RESTRICT
;

ALTER TABLE cabecerapaquetes ADD CONSTRAINT FK_cabecerapaquetes_entidades 
	FOREIGN KEY (entidade_id) REFERENCES entidades (id)
ON DELETE RESTRICT
;

ALTER TABLE campos ADD CONSTRAINT FK_campos_tipocampos 
	FOREIGN KEY (tipocampo_id) REFERENCES tipocampos (id)
ON DELETE RESTRICT
;

ALTER TABLE campos ADD CONSTRAINT FK_campos_tipodatos 
	FOREIGN KEY (tipodato_id) REFERENCES tipodatos (id)
ON DELETE RESTRICT
;

ALTER TABLE ciudades ADD CONSTRAINT FK_ciudades_regionales 
	FOREIGN KEY (regionale_id) REFERENCES regionales (id)
ON DELETE RESTRICT
;

ALTER TABLE ciudades ADD CONSTRAINT FK_ciudades_estadoregistros 
	FOREIGN KEY (estadoregistro_id) REFERENCES estadoregistros (id)
ON DELETE RESTRICT
;

ALTER TABLE consecutivoflujos ADD CONSTRAINT FK_consecutivoflujos_flujos 
	FOREIGN KEY (flujo_id) REFERENCES flujos (id)
ON DELETE RESTRICT
;

ALTER TABLE consecutivopaquetes ADD CONSTRAINT FK_consecutivopaquetes_cabecerapaquetes 
	FOREIGN KEY (cabecerapaquete_id) REFERENCES cabecerapaquetes (id)
ON DELETE RESTRICT
;

ALTER TABLE consecutivopaquetes ADD CONSTRAINT FK_consecutivopaquetes_tipopaquetes 
	FOREIGN KEY (tipopaquete_id) REFERENCES tipopaquetes (id)
ON DELETE RESTRICT
;

ALTER TABLE datoscabeceravalores ADD CONSTRAINT FK_datoscabeceravalores_indicedocs 
	FOREIGN KEY (indicedoc_id) REFERENCES indicedocs (id)
ON DELETE RESTRICT
;

ALTER TABLE datoscabeceravalores ADD CONSTRAINT FK_datoscabeceravalores_cabecerapaquetes 
	FOREIGN KEY (cabecerapaquete_id) REFERENCES cabecerapaquetes (id)
ON DELETE RESTRICT
;

ALTER TABLE destinatarios ADD CONSTRAINT FK_destinatarios_notificaciones 
	FOREIGN KEY (notificacione_id) REFERENCES notificaciones (id)
ON DELETE RESTRICT
;

ALTER TABLE distribucionmontos ADD CONSTRAINT FK_distribucionmontos_paquetes 
	FOREIGN KEY (paquete_id) REFERENCES paquetes (id)
ON DELETE RESTRICT
;

ALTER TABLE distribucionmontos ADD CONSTRAINT FK_distribucionmontos_centroscostos 
	FOREIGN KEY (centroscosto_id) REFERENCES centroscostos (id)
ON DELETE RESTRICT
;

ALTER TABLE documentospaquetes ADD CONSTRAINT FK_documentospaquetes_tiposdocumentales 
	FOREIGN KEY (tiposdocumentale_id) REFERENCES tiposdocumentales (id)
ON DELETE RESTRICT
;

ALTER TABLE documentospaquetes ADD CONSTRAINT FK_documentospaquetes_paquetes 
	FOREIGN KEY (paquete_id) REFERENCES paquetes (id)
ON DELETE RESTRICT
;

ALTER TABLE entidadesusuarios ADD CONSTRAINT FK_entidadesusuarios_entidades 
	FOREIGN KEY (entidade_id) REFERENCES entidades (id)
ON DELETE RESTRICT
;

ALTER TABLE entidadesusuarios ADD CONSTRAINT FK_entidadesusuarios_usuarios 
	FOREIGN KEY (usuario_id) REFERENCES usuarios (id)
ON DELETE RESTRICT
;

ALTER TABLE flujosdatoscabeceras ADD CONSTRAINT FK_flujosdatoscabeceras_indicedocs 
	FOREIGN KEY (indicedoc_id) REFERENCES indicedocs (id)
ON DELETE RESTRICT
;

ALTER TABLE flujosdatoscabeceras ADD CONSTRAINT FK_flujosdatoscabeceras_flujos 
	FOREIGN KEY (flujo_id) REFERENCES flujos (id)
ON DELETE RESTRICT
;

ALTER TABLE flujosecuencias ADD CONSTRAINT FK_flujosecuencias_bandejasflujos 
	FOREIGN KEY (bandejasflujo_id) REFERENCES bandejasflujos (id)
ON DELETE RESTRICT
;

ALTER TABLE flujosecuencias ADD CONSTRAINT FK_flujosecuencias_bandejasflujos_02 
	FOREIGN KEY (bandejasflujosig_id) REFERENCES bandejasflujos (id)
ON DELETE RESTRICT
;

ALTER TABLE flujosecuencias ADD CONSTRAINT FK_flujosecuencias_cambiobandejamensajes 
	FOREIGN KEY (cambiobandejamensaje_id) REFERENCES cambiobandejamensajes (id)
ON DELETE RESTRICT
;

ALTER TABLE impresorasoficinas ADD CONSTRAINT FK_impresorasoficinas_oficinas 
	FOREIGN KEY (oficina_id) REFERENCES oficinas (id)
ON DELETE RESTRICT
;

ALTER TABLE indicedocs ADD CONSTRAINT FK_indicedocs_tipodatos 
	FOREIGN KEY (tipodato_id) REFERENCES tipodatos (id)
ON DELETE RESTRICT
;

ALTER TABLE indicesopciones ADD CONSTRAINT FK_indicesopciones_indicedocs 
	FOREIGN KEY (indicedoc_id) REFERENCES indicedocs (id)
ON DELETE RESTRICT
;

ALTER TABLE indicespadredocs ADD CONSTRAINT FK_indicespadredocs_padredocumentales 
	FOREIGN KEY (padredocumentale_id) REFERENCES padredocumentales (id)
ON DELETE RESTRICT
;

ALTER TABLE indicespadredocs ADD CONSTRAINT FK_indicespadredocs_indicedocs 
	FOREIGN KEY (indicedoc_id) REFERENCES indicedocs (id)
ON DELETE RESTRICT
;

ALTER TABLE indicespadredocsvalor ADD CONSTRAINT FK_indicespadredocsvalor_indicespadredocs 
	FOREIGN KEY (indicespadredoc_id) REFERENCES indicespadredocs (id)
ON DELETE RESTRICT
;

ALTER TABLE indicespadredocsvalor ADD CONSTRAINT FK_indicespadredocsvalor_documentospaquetes 
	FOREIGN KEY (documentospaquete_id) REFERENCES documentospaquetes (id)
ON DELETE RESTRICT
;

ALTER TABLE infopaquetes ADD CONSTRAINT FK_infopaquetes_bancos 
	FOREIGN KEY (banco_id) REFERENCES bancos (id)
ON DELETE RESTRICT
;

ALTER TABLE infopaquetes ADD CONSTRAINT FK_infopaquetes_paquetes 
	FOREIGN KEY (paquete_id) REFERENCES paquetes (id)
ON DELETE RESTRICT
;

ALTER TABLE observaciones ADD CONSTRAINT FK_observaciones_paquetes 
	FOREIGN KEY (paquete_id) REFERENCES paquetes (id)
ON DELETE RESTRICT
;

ALTER TABLE observaciones ADD CONSTRAINT FK_observaciones_trazabilidades 
	FOREIGN KEY (trazabilidade_id) REFERENCES trazabilidades (id)
ON DELETE RESTRICT
;

ALTER TABLE oficinas ADD CONSTRAINT FK_oficinas_ciudades 
	FOREIGN KEY (ciudade_id) REFERENCES ciudades (id)
ON DELETE RESTRICT
;

ALTER TABLE oficinas_usuarios ADD CONSTRAINT FK_oficinas_usuarios_oficinas 
	FOREIGN KEY (oficina_id) REFERENCES oficinas (id)
ON DELETE RESTRICT
;

ALTER TABLE oficinas_usuarios ADD CONSTRAINT FK_oficinas_usuarios_usuarios 
	FOREIGN KEY (usuario_id) REFERENCES usuarios (id)
ON DELETE RESTRICT
;

ALTER TABLE paquetes ADD CONSTRAINT FK_paquetes_bandejasflujos 
	FOREIGN KEY (bandejasflujo_id) REFERENCES bandejasflujos (id)
ON DELETE RESTRICT
;

ALTER TABLE paquetes ADD CONSTRAINT FK_paquetes_oficinas 
	FOREIGN KEY (oficina_id) REFERENCES oficinas (id)
ON DELETE RESTRICT
;

ALTER TABLE paquetes ADD CONSTRAINT FK_paquetes_cabecerapaquetes 
	FOREIGN KEY (cabecerapaquete_id) REFERENCES cabecerapaquetes (id)
ON DELETE RESTRICT
;

ALTER TABLE paquetes ADD CONSTRAINT FK_paquetes_tipopaquetes 
	FOREIGN KEY (tipopaquete_id) REFERENCES tipopaquetes (id)
ON DELETE RESTRICT
;

ALTER TABLE paquetes ADD CONSTRAINT FK_paquetes_usuarios 
	FOREIGN KEY (usuario_id) REFERENCES usuarios (id)
ON DELETE RESTRICT
;

ALTER TABLE paquetes_usuarios ADD CONSTRAINT FK_paquetes_usuarios_paquetes 
	FOREIGN KEY (paquete_id) REFERENCES paquetes (id)
ON DELETE RESTRICT
;

ALTER TABLE paquetes_usuarios ADD CONSTRAINT FK_paquetes_usuarios_usuarios 
	FOREIGN KEY (usuario_id) REFERENCES usuarios (id)
ON DELETE RESTRICT
;

ALTER TABLE perfiles ADD CONSTRAINT FK_perfiles_tipoperfiles 
	FOREIGN KEY (tipoperfile_id) REFERENCES tipoperfiles (id)
ON DELETE RESTRICT
;

ALTER TABLE permisodoccargopadredocs ADD CONSTRAINT FK_permisodoccargopadredocs_padredocumentales 
	FOREIGN KEY (padredocumentale_id) REFERENCES padredocumentales (id)
ON DELETE RESTRICT
;

ALTER TABLE permisodoccargopadredocs ADD CONSTRAINT FK_permisodoccargopadredocs_permisodocs 
	FOREIGN KEY (permisodoc_id) REFERENCES permisodocs (id)
ON DELETE RESTRICT
;

ALTER TABLE permisodoccargopadredocs ADD CONSTRAINT FK_permisodoccargopadredocs_cargos 
	FOREIGN KEY (cargo_id) REFERENCES cargos (id)
ON DELETE RESTRICT
;

ALTER TABLE permisodocusuariopadredocs ADD CONSTRAINT FK_permisodocusuariopadredocs_padredocumentales 
	FOREIGN KEY (padredocumentale_id) REFERENCES padredocumentales (id)
ON DELETE RESTRICT
;

ALTER TABLE permisodocusuariopadredocs ADD CONSTRAINT FK_permisodocusuariopadredocs_permisodocs 
	FOREIGN KEY (permisodoc_id) REFERENCES permisodocs (id)
ON DELETE RESTRICT
;

ALTER TABLE permisodocusuariopadredocs ADD CONSTRAINT FK_permisodocusuariopadredocs_usuarios 
	FOREIGN KEY (usuario_id) REFERENCES usuarios (id)
;

ALTER TABLE permisoscargobandejas ADD CONSTRAINT FK_permisoscargobandejas_bandejasflujos 
	FOREIGN KEY (bandejasflujo_id) REFERENCES bandejasflujos (id)
ON DELETE RESTRICT
;

ALTER TABLE permisoscargobandejas ADD CONSTRAINT FK_permisoscargobandejas_cargos 
	FOREIGN KEY (cargo_id) REFERENCES cargos (id)
ON DELETE RESTRICT
;

ALTER TABLE permisoscargobandejas ADD CONSTRAINT FK_permisoscargobandejas_permisobandejas 
	FOREIGN KEY (permisobandeja_id) REFERENCES permisobandejas (id)
ON DELETE RESTRICT
;

ALTER TABLE permisousuariobandejas ADD CONSTRAINT FK_permisousuariobandejas_permisobandejas 
	FOREIGN KEY (permisobandeja_id) REFERENCES permisobandejas (id)
ON DELETE RESTRICT
;

ALTER TABLE permisousuariobandejas ADD CONSTRAINT FK_permisousuariobandejas_usuarios 
	FOREIGN KEY (usuario_id) REFERENCES usuarios (id)
ON DELETE RESTRICT
;

ALTER TABLE permisousuariobandejas ADD CONSTRAINT FK_permisousuariobandejas_bandejasflujos 
	FOREIGN KEY (bandejasflujo_id) REFERENCES bandejasflujos (id)
ON DELETE RESTRICT
;

ALTER TABLE regionales ADD CONSTRAINT FK_regionales_estadoregistros 
	FOREIGN KEY (estadoregistro_id) REFERENCES estadoregistros (id)
ON DELETE RESTRICT
;

ALTER TABLE seriesdocumentales ADD CONSTRAINT FK_seriesdocumentales_padredocumentales 
	FOREIGN KEY (padredocumentale_id) REFERENCES padredocumentales (id)
ON DELETE RESTRICT
;

ALTER TABLE seriesdocumentales ADD CONSTRAINT FK_seriesdocumentales_seriesdocumentales 
	FOREIGN KEY (seriesdocumentale_id) REFERENCES seriesdocumentales (id)
ON DELETE RESTRICT
;

ALTER TABLE tipodocumentalbandejas ADD CONSTRAINT FK_tipodocumentalbandejas_tiposdocumentales 
	FOREIGN KEY (tiposdocumentale_id) REFERENCES tiposdocumentales (id)
ON DELETE RESTRICT
;

ALTER TABLE tipodocumentalbandejas ADD CONSTRAINT FK_tipodocumentalbandejas_bandejas 
	FOREIGN KEY (bandeja_id) REFERENCES bandejas (id)
ON DELETE RESTRICT
;

ALTER TABLE tipopaquetes ADD CONSTRAINT FK_tipopaquetes_seriesdocumentales 
	FOREIGN KEY (seriesdocumentale_id) REFERENCES seriesdocumentales (id)
ON DELETE RESTRICT
;

ALTER TABLE tiposdocstipopaquetes ADD CONSTRAINT FK_tiposdocstipopaquetes_tiposdocumentales 
	FOREIGN KEY (tiposdocumentale_id) REFERENCES tiposdocumentales (id)
ON DELETE RESTRICT
;

ALTER TABLE tiposdocstipopaquetes ADD CONSTRAINT FK_tiposdocstipopaquetes_tipopaquetes 
	FOREIGN KEY (tipopaquete_id) REFERENCES tipopaquetes (id)
ON DELETE RESTRICT
;

ALTER TABLE tiposdocumentales ADD CONSTRAINT FK_tiposdocumentales_seriesdocumentales 
	FOREIGN KEY (seriesdocumentale_id) REFERENCES seriesdocumentales (id)
ON DELETE RESTRICT
;

ALTER TABLE tiposdocumentales ADD CONSTRAINT FK_tiposdocumentales_padredocumentales 
	FOREIGN KEY (padredocumentale_id) REFERENCES padredocumentales (id)
ON DELETE RESTRICT
;

ALTER TABLE trazabilidades ADD CONSTRAINT FK_trazabilidades_bandejasflujos 
	FOREIGN KEY (bandejasflujo_id) REFERENCES bandejasflujos (id)
ON DELETE RESTRICT
;

ALTER TABLE trazabilidades ADD CONSTRAINT FK_trazabilidades_usuarios 
	FOREIGN KEY (usuario_id) REFERENCES usuarios (id)
ON DELETE RESTRICT
;

ALTER TABLE trazabilidades ADD CONSTRAINT FK_trazabilidades_paquetes 
	FOREIGN KEY (paquete_id) REFERENCES paquetes (id)
ON DELETE RESTRICT
;

ALTER TABLE trazabilidades ADD CONSTRAINT FK_trazabilidades_paquetes_usuarios 
	FOREIGN KEY (paquetesusuario_id) REFERENCES paquetes_usuarios (id)
ON DELETE RESTRICT
;

ALTER TABLE trazabilidades ADD CONSTRAINT FK_trazabilidades_bandejasflujos_02 
	FOREIGN KEY (bandejaflujodestino_id) REFERENCES bandejasflujos (id)
ON DELETE RESTRICT
;

ALTER TABLE usuarios ADD CONSTRAINT FK_usuarios_perfiles 
	FOREIGN KEY (perfile_id) REFERENCES perfiles (id)
ON DELETE RESTRICT
;

ALTER TABLE usuarios ADD CONSTRAINT FK_usuarios_cargos 
	FOREIGN KEY (cargo_id) REFERENCES cargos (id)
ON DELETE RESTRICT
;

ALTER TABLE usuarios ADD CONSTRAINT FK_usuarios_estadoregistros 
	FOREIGN KEY (estadoregistro_id) REFERENCES estadoregistros (id)
ON DELETE RESTRICT
;
